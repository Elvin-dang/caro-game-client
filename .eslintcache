[{"D:\\ReactJS\\project ck\\game-caro-client\\src\\index.js":"1","D:\\ReactJS\\project ck\\game-caro-client\\src\\reportWebVitals.js":"2","D:\\ReactJS\\project ck\\game-caro-client\\src\\App.js":"3","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Signin.js":"4","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Home.js":"5","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Signout.js":"6","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Signup.js":"7","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\ActiveAccount.js":"8","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\ForgetPassword.js":"9","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Room.js":"10","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageList.js":"11","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\TopBar.js":"12","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Signin.js":"13","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Signup.js":"14","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Dashboard.js":"15","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Profile.js":"16","D:\\ReactJS\\project ck\\game-caro-client\\src\\api\\userApi.js":"17","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageRoom.js":"18","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroGame.js":"19","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageItem.js":"20","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Facebook.js":"21","D:\\ReactJS\\project ck\\game-caro-client\\src\\api\\axiosClient.js":"22","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Google.js":"23","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageBox.js":"24","D:\\ReactJS\\project ck\\game-caro-client\\src\\api\\oauthApi.js":"25","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroBoard.js":"26","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroRow.js":"27","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroSquare.js":"28"},{"size":465,"mtime":1608553049626,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1607485291397,"results":"31","hashOfConfig":"30"},{"size":1033,"mtime":1608735288949,"results":"32","hashOfConfig":"30"},{"size":368,"mtime":1607832728224,"results":"33","hashOfConfig":"30"},{"size":1264,"mtime":1608777871892,"results":"34","hashOfConfig":"30"},{"size":238,"mtime":1608735288995,"results":"35","hashOfConfig":"30"},{"size":366,"mtime":1608735288996,"results":"36","hashOfConfig":"30"},{"size":2789,"mtime":1608735288994,"results":"37","hashOfConfig":"30"},{"size":8447,"mtime":1608735288994,"results":"38","hashOfConfig":"30"},{"size":10425,"mtime":1608786512485,"results":"39","hashOfConfig":"30"},{"size":2873,"mtime":1608553049616,"results":"40","hashOfConfig":"30"},{"size":3868,"mtime":1608735288979,"results":"41","hashOfConfig":"30"},{"size":4190,"mtime":1608735288978,"results":"42","hashOfConfig":"30"},{"size":3333,"mtime":1608735288979,"results":"43","hashOfConfig":"30"},{"size":15401,"mtime":1608867672298,"results":"44","hashOfConfig":"30"},{"size":5636,"mtime":1608735288977,"results":"45","hashOfConfig":"30"},{"size":1470,"mtime":1608735288950,"results":"46","hashOfConfig":"30"},{"size":1260,"mtime":1608553049618,"results":"47","hashOfConfig":"30"},{"size":6107,"mtime":1608735288965,"results":"48","hashOfConfig":"30"},{"size":984,"mtime":1608553049614,"results":"49","hashOfConfig":"30"},{"size":1153,"mtime":1608553049594,"results":"50","hashOfConfig":"30"},{"size":860,"mtime":1608777856569,"results":"51","hashOfConfig":"30"},{"size":1177,"mtime":1608735288967,"results":"52","hashOfConfig":"30"},{"size":1632,"mtime":1608553049612,"results":"53","hashOfConfig":"30"},{"size":437,"mtime":1608553049538,"results":"54","hashOfConfig":"30"},{"size":524,"mtime":1608553049556,"results":"55","hashOfConfig":"30"},{"size":1560,"mtime":1608553049570,"results":"56","hashOfConfig":"30"},{"size":1189,"mtime":1608553049571,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"wtnwo7",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\ReactJS\\project ck\\game-caro-client\\src\\index.js",[],["127","128"],"D:\\ReactJS\\project ck\\game-caro-client\\src\\reportWebVitals.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\App.js",["129","130"],"import './App.css';\r\nimport Signin from './pages/Signin';\r\nimport Signup from './pages/Signup';\r\nimport Signout from './pages/Signout';\r\nimport Home from './pages/Home';\r\nimport ActiveAccount from './pages/ActiveAccount';\r\nimport ForgetPassword from './pages/ForgetPassword';\r\nimport {BrowserRouter as Router,  Switch,  Route} from \"react-router-dom\";\r\nimport React, { useState, useEffect} from 'react'\r\nfunction App() {\r\n  \r\n  return(\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/signin\">\r\n            <Signin />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n          <Route path=\"/signout\">\r\n            <Signout />\r\n          </Route>\r\n          <Route path=\"/account/activate/:token\">\r\n            <ActiveAccount/>\r\n          </Route>\r\n          <Route path=\"/forget-password\">\r\n            <ForgetPassword/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n)};\r\nexport default App;\r\n","D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Signin.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Home.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Signout.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\Signup.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\ActiveAccount.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\pages\\ForgetPassword.js",["131"],"import React, { useEffect, useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert style={{width: '100%'}} elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(5)\r\n    },\r\n    linkProfile: {\r\n        textDecoration: 'none'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const [info, setInfo] = useState({\r\n      email: \"\", \r\n      token: \"\",\r\n      password: \"\",\r\n      retypePassword: \"\"\r\n    });\r\n    const [process, setProcess] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    // useEffect(() => {\r\n    //     setIsLoading(false);\r\n    //     setProcess(1);\r\n    //     setInfo({\r\n    //         email: \"\", \r\n    //         token: \"\",\r\n    //         password: \"\",\r\n    //         retypePassword: \"\"\r\n    //     });\r\n    // }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.forgetPassword(info.email);\r\n            if(response.result) {\r\n                setProcess(2);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            if(err.response.status === 403) alert(err.response.data.message);\r\n            else if(err.response.status === 400) alert(err.response.data.details[0].message);\r\n            else alert('Server not response');\r\n        }\r\n    };\r\n\r\n    const handleSubmitConfirmToken = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.confirmToken(info.token);\r\n            if(response.result) {\r\n                setProcess(3);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            alert('Wrong reset password code');\r\n        }\r\n    }\r\n\r\n    const handleSubmitChangePassword = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            if(info.password !== info.retypePassword) \r\n            {\r\n                alert(\"Wrong Re-type password. Please try again!\");\r\n                return;\r\n            }\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.resetPassword(info.token, info.password);\r\n            if(response.result) {\r\n                setProcess(4);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            if(err.response.status === 400) alert(err.response.data.details[0].message);\r\n            else alert('Server not response');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Forgot password\r\n            </Typography>\r\n            {process === 1 ? // Điền email\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Fill your email to send reset password code\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus \r\n                        onChange={e => setInfo({ ...info, email: e.target.value})} value={info.email}  />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Send code to email\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Go to sign in\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                : process === 2 ? // Điền reset code\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmitConfirmToken} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Type reset password code here\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"resetCode\" label=\"Reset Code\" name=\"Reset Code\" autoFocus \r\n                        onChange={e => setInfo({ ...info, token: e.target.value})} value={info.token}  />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Confirm reset code\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Go to sign in\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                : process === 3 ? // Điền mật khẩu mới\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmitChangePassword} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Enter new password\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n                        onChange={e => setInfo({ ...info, password: e.target.value})} autoComplete=\"current-password\" value={info.password}/>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Re-type Password\" type=\"password\" id=\"repassword\"\r\n                        onChange={e => setInfo({ ...info, retypePassword: e.target.value})} value={info.retypePassword} />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change password\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Go to sign in\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                :\r\n                <>\r\n                    <Alert severity=\"success\">Đặt lại mật khẩu thành công</Alert>\r\n                    <Link to='/signin' className={classes.linkProfile}>\r\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\r\n                            Đi đến đăng nhập\r\n                        </Button>\r\n                    </Link>\r\n                </>\r\n            }   \r\n        </div>\r\n        </Container>\r\n    );\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Room.js",["132","133","134","135","136","137"],"import React,{ useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Card, CardContent, Grid, Link, Button,Paper, Box} from '@material-ui/core';\r\nimport CaroGame from './CaroGame';\r\nimport MessageRoom from '../components/MessageRoom';\r\nimport swal from 'sweetalert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//setting dialog styles\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  });\r\n  \r\n  const DialogContent = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiDialogContent);\r\n  \r\n  const DialogActions = withStyles((theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(1),\r\n    },\r\n  }))(MuiDialogActions);\r\n\r\n//function room\r\nexport default function Room(props) {    \r\n    const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n    const socket = props.socket;\r\n    const roomID = useParams().id;\r\n    const [openInviteDialog, setOpenInviteDialog] = useState(false);\r\n    const [usersOnline,setUsersOnline] = useState([]);\r\n\r\n    const [room, setRoom] = useState({\r\n        roomId: null,\r\n        hostName: null,\r\n        status: null,\r\n        nextTurn: 1,\r\n        player1: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        player2: {\r\n            id: null,\r\n            name: null\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        socket.on('roomJoined',  response => setRoom(response));\r\n        socket.on('roomUpdated', response => setRoom(response));\r\n        socket.on('updateUsersOnlineList', (response) => setUsersOnline(response)); \r\n    }, []);\r\n\r\n    const joinPlayer = (position) =>{\r\n        if(position === 1 && room.player2.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 1 && room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                },\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                },\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    const leavePlayer = () => {\r\n        if(room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n        if(room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handlePlay = () => {\r\n        if(room.player1.id === null || room.player2.id === null) swal(\"Oops!\",'Cần 2 người chơi để bắt đầu',\"warning\");\r\n        else socket.emit(\"updateRoom\", {\r\n            ...room,\r\n            status: 1\r\n        });\r\n    } \r\n\r\n    const handleRestart = () => {\r\n        socket.emit(\"restartGame\", {\r\n            ...room,\r\n            nextTurn: 1,\r\n            status: 0\r\n        });\r\n    }\r\n\r\n    const isMyTurn = () => {\r\n        if(room.status === 0) return false;\r\n        else {\r\n            if(curUser._id === room.player1.id) {\r\n                if(room.nextTurn === 1) return true;\r\n                return false;\r\n            } else if(curUser._id === room.player2.id) {\r\n                if(room.nextTurn === 2) return true;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClickOpenInviteDialog = () => {\r\n        let invitableUsers = usersOnline;\r\n        for(let a=0; a < invitableUsers.length; a++)\r\n        {\r\n            invitableUsers[a].invited = false;\r\n        }\r\n        setUsersOnline(invitableUsers);\r\n        setOpenInviteDialog(true);\r\n      };\r\n    const handleCloseInviteDialog = () => {\r\n    setOpenInviteDialog(false);\r\n    };\r\n    \r\n    const handleClickInvitePlayer = (invitedPlayer) =>{\r\n        invitedPlayer.invited = true;\r\n        let invitableUsers = usersOnline;\r\n        for(let a=0; a < invitableUsers.length; a++)\r\n        {\r\n            if(invitableUsers[a].userId === invitedPlayer.userId)\r\n            {\r\n                invitableUsers[a] = invitedPlayer;\r\n            }\r\n        }\r\n        setUsersOnline(invitableUsers);\r\n        console.log(invitedPlayer);\r\n        socket.emit(\"invitePlayer\", {\"playerInviteName\":curUser.name,\"room\":roomID,\"invitePlayerId\":invitedPlayer.userId});\r\n    };\r\n    return (\r\n        <div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h1>Room {roomID}</h1>\r\n            </div>\r\n            <Grid container>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={10}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} md={8}>\r\n                                    <Grid container justify='center'>\r\n                                        <CaroGame isStart={isMyTurn()} room={room} socket={socket}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <h3 style={{color: room.nextTurn === 1 ? 'red' : 'black'}}>Người chơi (X): {room.player1.name ? room.player1.name : <Button onClick={() => joinPlayer(1)} style={{margin:'15px'}} variant=\"contained\">Tham gia</Button>}</h3>\r\n                                    <h3 style={{color: room.nextTurn === 2 ? 'red' : 'black'}}>Người chơi (O): {room.player2.name ? room.player2.name : <Button onClick={() => joinPlayer(2)} style={{margin:'15px'}} variant=\"contained\">Tham gia</Button>}</h3>\r\n                                    <Button onClick={() => leavePlayer()} style={{marginBottom:'15px'}} variant=\"contained\" color=\"secondary\" disabled={room.status === 0 ? false : true}>Làm khán giả</Button>\r\n                                    <Button onClick={() => room.status === 0 ? handlePlay() : handleRestart()} style={{marginBottom:'30px', display: 'block'}} variant=\"contained\" color=\"primary\">{room.status === 0 ? \"Bẳt đầu\" : \"Chơi lại\"}</Button>\r\n                                    <Button onClick={() => handleClickOpenInviteDialog()} style={{marginBottom:'30px', display: 'block'}} variant=\"contained\" >Mời</Button>\r\n                                    <MessageRoom socket={socket} roomId={room.roomId}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={1}/>\r\n\r\n                         {/* Invite players dialog */}\r\n                        <Dialog  onClose={handleCloseInviteDialog} aria-labelledby=\"customized-dialog-title\" open={openInviteDialog}>\r\n                        <DialogTitle style = {{width:'300px'}} id=\"customized-dialog-title\" onClose={handleCloseInviteDialog}>\r\n                            Danh sách người chơi online\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <Typography gutterBottom>\r\n                            {usersOnline.map(item => \r\n                                item.userId !== curUser._id ?\r\n                                <div key={item.userId}>\r\n                                    <li >\r\n                                        <span>{item.userName}\r\n                                        <Button disabled = {item.invited} onClick={() => handleClickInvitePlayer(item)} style={{height:'20px',float: 'right'}} variant=\"contained\" >Mời</Button>\r\n                                        </span>                                  \r\n                                    </li>\r\n                                 </div>\r\n                            : null\r\n                            )}\r\n                            </Typography>\r\n                            \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button autoFocus onClick={handleCloseInviteDialog} color=\"primary\">\r\n                            Close\r\n                            </Button>\r\n                        </DialogActions>\r\n                        </Dialog>\r\n                </Grid>\r\n            </Grid>\r\n        </div>    \r\n    )\r\n  }\r\n","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageList.js",["138","139"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    margin: theme.spacing(2, 2),\r\n    width: 400,\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '92%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n  \tmargin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n\tconst classes = useStyles();\r\n\tconst [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\tconst messagesEndRef = useRef(null);\r\n    const {socket} = props;\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const { isLogin} = props;\r\n    if(isLogin !== true)\r\n    {\r\n        setIsRedirect(true);\r\n    }\r\n\r\n\r\n\tconst addMessages = () => {\r\n\t\t//setMessages(m => [...m, {name: \"Vinh\", message:\"hhaha\"}]);\r\n        if(message!==\"\"){\r\n            setMessages(m => [...m, {name: getUserName(), message:message}]);\r\n            setMessage(\"\");\r\n        }\r\n\t};\r\n    const getUserName = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser')).name;\r\n        }\r\n        else return 0;\r\n    }\r\n    const sendNewMessage = ()=> {\r\n        const name = getUserName();\r\n        socket.emit(\"newMessage\", {message: message, name: name}); //gửi event về server\r\n        setMessage(\"\");\r\n    }\r\n\r\n\r\n\tuseEffect(()=>{\r\n        socket.on('newMessage',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])});\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n    return (\r\n        <div>\r\n        { (isRedirect === true) ? (<Redirect to='/signin' />) :(\r\n        <div className={classes.root} id=\"messages\"\t>\r\n            <div className={classes.messlist}>\r\n                {messages.map((item, index) =>\r\n                    <Message key={index} message={item}/>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n        \t<div className={classes.searchIcon}>\r\n      \t\t\t<TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message}/>\r\n                <button onClick={sendNewMessage}>\r\n    \t\t\t\t<SendIcon color=\"primary\" />\r\n    \t\t\t</button>\r\n    \t\t</div>\r\n        </div>\r\n        )\r\n    }\r\n    </div>\r\n    )\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\TopBar.js",["140","141","142","143","144"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport {Card, AppBar, Button, Toolbar, Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport io from 'socket.io-client'\r\nimport userApi from '../api/userApi';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  bottom_space: {\r\n      marginBottom: 12, \r\n  },\r\n  title: {\r\n      flexGrow: 1,\r\n  },\r\n  logoutButton: {\r\n      marginLeft: 10,\r\n  },\r\n  link: {\r\n      textDecoration: 'none',\r\n      flexGrow: 1,\r\n  },\r\n  linkProfile: {\r\n      textDecoration: 'none',\r\n  },\r\n  large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n  },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const classes = useStyle();\r\n  const isLoggedIn = props.isLogin;\r\n\r\n  let name = null;\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n      }\r\n\r\n      setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n    event.preventDefault();\r\n    setOpen(false);\r\n    }\r\n  }\r\n  \r\n  const getUserName = () =>\r\n  {\r\n    if( localStorage.getItem('curUser')){\r\n      name = JSON.parse(localStorage.getItem('curUser')).name;\r\n    }\r\n  }\r\n  \r\n  getUserName();\r\n  \r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className=\"title\">\r\n            Hello {!isLoggedIn ? <Button href=\"/signin\" color=\"inherit\">Login</Button>: name}\r\n          </Typography>\r\n          \r\n          {isLoggedIn && (\r\n            <div>\r\n              <Button\r\n              ref={anchorRef}\r\n              aria-controls={open ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              >\r\n                  <AccountCircleIcon fontSize=\"large\"/>\r\n              </Button>\r\n              <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n              {({ TransitionProps, placement }) => (\r\n                  <Grow\r\n                  {...TransitionProps}\r\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                  >\r\n                  <Paper>\r\n                      <ClickAwayListener onClickAway={handleClose}>\r\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                          <Link to='/profile' className={classes.linkProfile}>\r\n                              <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                          </Link>\r\n                          <Link to='/signout' className={classes.linkProfile}>\r\n                              <MenuItem onClick={handleClose}>Sign out</MenuItem>\r\n                          </Link>\r\n                      </MenuList>\r\n                      </ClickAwayListener>\r\n                  </Paper>\r\n                  </Grow>\r\n              )}\r\n              </Popper>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Signin.js",["145","146"],"import React, { useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Facebook from './Facebook'\r\nimport Google from './Google'\r\nimport userApi from '../api/userApi';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\"});\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const setRedirectTrue = ()=>{\r\n    setIsRedirect(true);\r\n  }\r\n  const setIsLoadingTrue = ()=> {\r\n    setIsLoading(true);\r\n  }\r\n  const setIsLoadingFalse = ()=> {\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      const response = await userApi.signin(user);\r\n      if(response.token) {\r\n          localStorage.setItem('login', JSON.stringify({\r\n            login:true,\r\n            token:response.token,\r\n          }));\r\n          const curUser = await userApi.getCurUser();   \r\n          localStorage.setItem('curUser', JSON.stringify(curUser));\r\n        setIsLoading(false);\r\n        setIsRedirect(true);\r\n      } else {\r\n          alert(response.message);\r\n      }\r\n    } catch(err) {\r\n      setIsLoading(false);\r\n      if(err.response.status === 401) alert(err.response.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} autoComplete=\"current-password\" />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container mb={2} className={classes.submit}>\r\n            <Grid item xs >\r\n              <Facebook setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Google setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/forget-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Signup.js",["147","148"],"import React, { useState } from 'react';\r\nimport { Avatar, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\", name: \"\"});\r\n  const [repassword, setRepassword] = useState(\"\");\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      e.preventDefault();\r\n      if(user.password !== repassword)\r\n      {\r\n        alert(\"Wrong Re-type password. Please try again!\");\r\n      }else{\r\n        const response = await userApi.signup(user);\r\n        alert(response.message);\r\n        setIsRedirect(true);\r\n      }\r\n    }catch(err){\r\n      if(err.response.status === 403) alert(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/signin' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"name\" label=\"Your name\" name=\"name\" \r\n            onChange={e => setUser({ ...user, name: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Re-type Password\" type=\"password\" id=\"repassword\"\r\n            onChange={e => setRepassword(e.target.value)} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to=\"/signin\" variant=\"body2\">\r\n                Have account already? Signin\r\n              </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Dashboard.js",["149","150","151","152","153","154","155"],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Profile.js",["156","157","158"],"import React,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Paper, Button, Avatar, Box, CssBaseline, Grid, Typography, Container, TextField } from '@material-ui/core';\r\nimport userApi from '../api/userApi';\r\nimport AvatarEdit from 'react-avatar-edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(1),\r\n\t},\r\n\tinfomation: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(2),\r\n\t}\r\n}));\r\nexport default function Profile(props) { \r\n\tconst classes = useStyles(); \r\n\tconst [user, setUser] = useState({ name: \"\", password: \"\"});\r\n\tconst [curUser, setCurUser] = useState(JSON.parse(localStorage.getItem('curUser')));\r\n\tconst [imageSource, setImageSource] = useState(null);\r\n\tconst [avatar, setAvatar] = useState(null);\r\n    const handleChangeName = async () =>{\r\n    \tif(user.name!==\"\")\r\n    \t{\r\n    \t\tconst response = await userApi.updateUser({ email: curUser.email, name: user.name });\r\n\t    \tawait setCurUser({ ...curUser, name: user.name});\r\n\t    \tlocalStorage.setItem('curUser', JSON.stringify(curUser));\r\n    \t}\r\n    }\r\n    const handleChangePassword = async () =>{\r\n    \tif(user.password!==\"\"){\r\n    \t\tconst response = await userApi.updateUser({ email: curUser.email, password: user.password });\r\n    \t}\r\n    }\r\n    const handleUploadAvatar = async ()=>{\r\n    \tawait setCurUser({ ...curUser, avatar: avatar});\r\n    \tawait localStorage.setItem('curUser', JSON.stringify(curUser));\r\n\t\tconst response = await userApi.updateUser({ email: curUser.email, avatar: avatar });\r\n    \tsetAvatar(null);\r\n    \tsetImageSource(null);\r\n    }\r\n    const onClose = () => {\r\n\t\tsetAvatar(null);\r\n\t}\r\n\r\n\tconst onCrop = (event) => {\r\n\t\tsetAvatar(event);\r\n\t}\r\n\r\n\tconst onBeforeFileLoad = (elem) => {\r\n\t\tif(elem.target.files[0].size > 71680){\r\n\t\t\talert(\"File is too big!\");\r\n\t\t\telem.target.value = \"\";\r\n\t\t};\r\n\t}\r\n\r\n\treturn (<div>{ !curUser && (<Redirect to='/signin' />) }\r\n\t\t<CssBaseline />\r\n    \t<main>\r\n        {/* Hero unit */}\r\n\t        <div>\r\n\t          <Container maxWidth=\"sm\">\r\n\t            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n\t              Profile\r\n\t            </Typography>\r\n\t          </Container>\r\n\t        </div>\r\n\t        <div>\r\n\t        \t<Container >\r\n\t        \t\t<Grid container spacing={1} >\r\n\t        \t\t\t<Grid item xs={3} >\r\n\t        \t\t\t\t<Box bgcolor=\"info.main\" height={750}>\r\n\t        \t\t\t\t\t<Paper class={classes.paper}>\r\n\t\t\t        \t\t\t\t<Box display=\"flex\" justifyContent=\"center\" p={3} >\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt=\"avatar\" src={curUser.avatar} />\r\n\t\t\t        \t\t\t\t</Box>\r\n\t\t\t        \t\t\t\t<Box display=\"flex\" justifyContent=\"left\" m={1} p={1} >\r\n\t\t\t\t\t\t\t\t\t\t<h2>{curUser.name}</h2>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t<Paper class={classes.infomation}>\r\n\t\t\t        \t\t\t\t<Grid  container spacing={1} >\r\n\t\t\t        \t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t        \t\t\t\t\t\t<h4>Email: {curUser.email}</h4>\r\n\t\t\t        \t\t\t\t\t</Grid>\r\n\t\t\t        \t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t        \t\t\t\t\t\t<h4>Email: {curUser.email}</h4>\r\n\t\t\t        \t\t\t\t\t</Grid>\r\n\t\t\t        \t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t        \t\t\t\t\t\t<h4>Email: {curUser.email}</h4>\r\n\t\t\t        \t\t\t\t\t</Grid>\r\n\t\t\t        \t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t        \t\t\t\t\t\t<h4>Email: {curUser.email}</h4>\r\n\t\t\t        \t\t\t\t\t</Grid>\r\n\t\t\t        \t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t        \t\t\t\t\t\t<h4>Email: {curUser.email}</h4>\r\n\t\t\t        \t\t\t\t\t</Grid>\r\n\t\t\t        \t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t        \t\t\t\t\t\t<h4>Email: {curUser.email}</h4>\t\r\n\t\t\t        \t\t\t\t\t</Grid>\r\n\t\t\t        \t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Box>\r\n\t        \t\t\t</Grid>\r\n\t        \t\t\t<Grid item xs={9}>\r\n\t        \t\t\t\t<Box bgcolor=\"#e0e0e0\" height={750}>\r\n\t        \t\t\t\t\t<Box display=\"flex\" justifyContent=\"left\" p={3} >\r\n\t\t\t\t\t\t\t\t\t<Typography component=\"h5\" variant=\"h5\" align=\"left\" color=\"textPrimary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\tEdit your profile\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t        \t\t\t\t\t<Box display=\"flex\" justifyContent=\"left\" px={5} >\r\n\t        \t\t\t\t\t\t<Grid  container spacing={3} >\r\n\t\t        \t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"name\" label=\"New name\" name=\"name\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUser({ ...user, name: e.target.value})} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={handleChangeName} fullWidth variant=\"contained\" color=\"primary\" >Change name</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"New password\" type=\"password\" id=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUser({ ...user, password: e.target.value})} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onCLick={handleChangePassword} fullWidth variant=\"contained\" color=\"primary\" >Change Password</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t<AvatarEdit\r\n\t\t\t\t\t\t\t\t\t\t\twidth={390}\r\n\t\t\t\t\t\t\t\t\t\t\theight={295}\r\n\t\t\t\t\t\t\t\t\t\t\tonCrop={onCrop}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={onClose}\r\n\t\t\t\t\t\t\t\t\t\t\tonBeforeFileLoad={onBeforeFileLoad}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={imageSource}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\t\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={avatar} alt=\"Preview\" />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<form method=\"form\" onSubmit={handleUploadAvatar}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"left\" m={1} p={1} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" >Apply</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t        \t\t\t\t</Box>\r\n\t        \t\t\t</Grid>\r\n\t        \t\t</Grid>\r\n\t        \t</Container>\r\n\t        </div>\r\n        </main>\r\n\t</div>);\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\api\\userApi.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageRoom.js",["159"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageBox from './MessageBox';\r\nexport default function MessageRoom(props) {\r\n    const {socket, roomId} = props;\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n    const getUserName = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser')).name;\r\n        }\r\n        else return 0;\r\n    }\r\n\r\n    const sendNewMessage = (e)=> {\r\n        e.preventDefault()\r\n        if(message!==\"\"){\r\n            const name = getUserName();\r\n            socket.emit(\"chat-room\", {message: message, name: name, roomId: roomId}); //gửi event về server\r\n            setMessage(\"\");\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        socket.on('server-chat-room',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        });\r\n        }, []);\r\n    return (\r\n        <MessageBox messagesEndRef={messagesEndRef} messages={messages} addMessages={sendNewMessage} message={message} setMessage={setMessage}/>\r\n    )\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroGame.js",["160","161","162","163","164","165","166"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport CaroBoard from './CaroBoard';\r\nimport { io } from 'socket.io-client';\r\nimport { SportsHockeyRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnBold: {\r\n        fontWeight: 'bold',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    gameInfo: {\r\n        marginLeft: '20px'\r\n    }\r\n}));\r\n\r\nconst size = 20;\r\nconst winCondition = 5;\r\n\r\nconst CaroGame = ({ socket, isStart, room }) => {\r\n    let tmpArr = Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      tmpArr[i] = Array(size).fill(null);\r\n    }\r\n\r\n    const [gameConfig, setGameConfig] = useState({\r\n        width: size,\r\n        height: size,\r\n        history: [{\r\n            squares: tmpArr,\r\n            location: null\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        isDescending: true\r\n    });\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        socket.on('updateGameConfig', response => setGameConfig(response));\r\n        socket.on('opponentMove',  response => handleClick(response.i, response.j));\r\n    }, [socket]);\r\n\r\n    const history = gameConfig.history;\r\n    const current = history[gameConfig.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let moves = history.map((step, move) => {\r\n        const desc = move ?\r\n        'Go to move #' + move + ' (' + step.location.x + ',' + step.location.y + ')' :\r\n        'Go to game start';\r\n        return (gameConfig.stepNumber === move) ? (\r\n            <li key={move}>\r\n                <Button className={classes.btnBold} onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        ) : (\r\n            <li key={move}>\r\n                <Button onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        );\r\n    })\r\n    if(gameConfig.isDescending) {\r\n        moves = moves.reverse();\r\n    }\r\n\r\n    let arrow = gameConfig.isDescending ? '↓' : '↑';\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner.val;\r\n    } else {\r\n        status = 'Next player: ' + (gameConfig.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    const handleClick = (i, j) => {\r\n        if(!isStart) return;\r\n        const newHistory = gameConfig.history.slice(0, gameConfig.stepNumber + 1);\r\n        const current = history[gameConfig.stepNumber];\r\n        const squares = current.squares.slice();\r\n\r\n        current.squares.map((row, index) => {\r\n            squares[index] = current.squares[index].slice();\r\n            return true;\r\n        });\r\n\r\n        if(calculateWinner(squares) || squares[i][j])\r\n        {\r\n            console.log(\"win is \"+ gameConfig.xIsNext ? 'X' : 'O')\r\n        }\r\n\r\n        squares[i][j] = gameConfig.xIsNext ? 'X' : 'O';\r\n        \r\n        socket.emit('nextMove', {\r\n            i: i,\r\n            j: j,\r\n            room: room,\r\n            gameConfig: {\r\n                ...gameConfig,\r\n                history: newHistory.concat([{\r\n                    squares: squares,\r\n                    location: {x: i, y: j}\r\n                }]),\r\n                stepNumber: newHistory.length,\r\n                xIsNext: !gameConfig.xIsNext\r\n            }\r\n        });\r\n    }\r\n\r\n    const sort = () => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            isDescending: !gameConfig.isDescending\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.game}>\r\n                <div>\r\n                    <CaroBoard\r\n                        squares={current.squares}\r\n                        onClick={(i, j) => handleClick(i, j)}\r\n                        winner={winner}\r\n                        isStart={isStart}\r\n                    />\r\n                </div>\r\n                {/* <div className={classes.gameInfo}>\r\n                    <div>\r\n                        <Button onClick={sort}>Thứ tự bước {arrow}</Button>\r\n                    </div>\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    let win;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      for (let j = 0; j < squares[i].length; j++) {\r\n        if (!squares[i][j]) continue;\r\n        if (j <= squares[i].length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRight'};\r\n        }\r\n        if (i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToDown'};\r\n        }\r\n        if (j <= squares[i].length - winCondition && i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRightDown'};\r\n        }\r\n        if (i <= squares.length - winCondition && j >= winCondition - 1) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToLeftDown'};\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default CaroGame;\r\n","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageItem.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Facebook.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\api\\axiosClient.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\Google.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\MessageBox.js",["167","168","169","170"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    margin: theme.spacing(2, 2),\r\n    width: 400,\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '92%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n      margin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n  const classes = useStyles();\r\n  const { messagesEndRef, addMessages, messages, message, setMessage } = props;\r\n  return (\r\n      <div className={classes.root} id=\"messages\"  >\r\n        <div className={classes.messlist}>\r\n            {messages.map((item, index) =>\r\n                <Message key={index} message={item}/>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n        <form action=\"#\" onSubmit={addMessages} className={classes.searchIcon}>\r\n          <TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message} autoComplete=\"off\" />\r\n          <button type=\"submit\">\r\n            <SendIcon color=\"primary\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n}","D:\\ReactJS\\project ck\\game-caro-client\\src\\api\\oauthApi.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroBoard.js",["171"],"import React from 'react';\r\nimport CaroSquare from './CaroSquare';\r\nimport CaroRow from './CaroRow';\r\n\r\nconst CaroBoard = ({ squares, onClick, winner, isStart }) => {\r\n    const board = squares.map((row, index) => <CaroRow winner={winner} rowIdx={index} row={row} onClick={onClick} isStart={isStart} key={\"r\" + index}/>);\r\n    const renderSquare = (i) => <CaroSquare value={squares[i]} onClick={() => onClick(i)}/>;\r\n\r\n    return (\r\n        <div>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaroBoard;\r\n","D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroRow.js",[],"D:\\ReactJS\\project ck\\game-caro-client\\src\\components\\CaroSquare.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":9,"column":17,"nodeType":"178","messageId":"179","endLine":9,"endColumn":25},{"ruleId":"176","severity":1,"message":"180","line":9,"column":27,"nodeType":"178","messageId":"179","endLine":9,"endColumn":36},{"ruleId":"176","severity":1,"message":"180","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"181","line":4,"column":9,"nodeType":"178","messageId":"179","endLine":4,"endColumn":13},{"ruleId":"176","severity":1,"message":"182","line":4,"column":15,"nodeType":"178","messageId":"179","endLine":4,"endColumn":26},{"ruleId":"176","severity":1,"message":"183","line":4,"column":34,"nodeType":"178","messageId":"179","endLine":4,"endColumn":38},{"ruleId":"176","severity":1,"message":"184","line":4,"column":47,"nodeType":"178","messageId":"179","endLine":4,"endColumn":52},{"ruleId":"176","severity":1,"message":"185","line":4,"column":54,"nodeType":"178","messageId":"179","endLine":4,"endColumn":57},{"ruleId":"186","severity":1,"message":"187","line":84,"column":8,"nodeType":"188","endLine":84,"endColumn":10,"suggestions":"189"},{"ruleId":"176","severity":1,"message":"190","line":46,"column":8,"nodeType":"178","messageId":"179","endLine":46,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":71,"column":8,"nodeType":"188","endLine":71,"endColumn":18,"suggestions":"191"},{"ruleId":"176","severity":1,"message":"180","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"181","line":2,"column":9,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"192","line":2,"column":74,"nodeType":"178","messageId":"179","endLine":2,"endColumn":78},{"ruleId":"176","severity":1,"message":"193","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":10},{"ruleId":"176","severity":1,"message":"194","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":15},{"ruleId":"176","severity":1,"message":"195","line":2,"column":60,"nodeType":"178","messageId":"179","endLine":2,"endColumn":68},{"ruleId":"176","severity":1,"message":"196","line":2,"column":70,"nodeType":"178","messageId":"179","endLine":2,"endColumn":86},{"ruleId":"176","severity":1,"message":"195","line":2,"column":44,"nodeType":"178","messageId":"179","endLine":2,"endColumn":52},{"ruleId":"176","severity":1,"message":"196","line":2,"column":54,"nodeType":"178","messageId":"179","endLine":2,"endColumn":70},{"ruleId":"176","severity":1,"message":"197","line":4,"column":1,"nodeType":"178","messageId":"179","endLine":4,"endColumn":16},{"ruleId":"176","severity":1,"message":"183","line":4,"column":24,"nodeType":"178","messageId":"179","endLine":4,"endColumn":28},{"ruleId":"176","severity":1,"message":"198","line":99,"column":10,"nodeType":"178","messageId":"179","endLine":99,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":174,"column":39,"nodeType":"201","messageId":"202","endLine":174,"endColumn":41},{"ruleId":"186","severity":1,"message":"203","line":193,"column":6,"nodeType":"188","endLine":193,"endColumn":8,"suggestions":"204"},{"ruleId":"199","severity":1,"message":"200","line":232,"column":31,"nodeType":"201","messageId":"202","endLine":232,"endColumn":33},{"ruleId":"176","severity":1,"message":"205","line":240,"column":9,"nodeType":"178","messageId":"179","endLine":240,"endColumn":18},{"ruleId":"176","severity":1,"message":"206","line":27,"column":13,"nodeType":"178","messageId":"179","endLine":27,"endColumn":21},{"ruleId":"176","severity":1,"message":"206","line":34,"column":13,"nodeType":"178","messageId":"179","endLine":34,"endColumn":21},{"ruleId":"176","severity":1,"message":"206","line":40,"column":9,"nodeType":"178","messageId":"179","endLine":40,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":29,"column":12,"nodeType":"188","endLine":29,"endColumn":14,"suggestions":"207"},{"ruleId":"176","severity":1,"message":"193","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":12},{"ruleId":"176","severity":1,"message":"208","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":29},{"ruleId":"186","severity":1,"message":"209","line":46,"column":8,"nodeType":"188","endLine":46,"endColumn":16,"suggestions":"210"},{"ruleId":"176","severity":1,"message":"211","line":66,"column":17,"nodeType":"178","messageId":"179","endLine":66,"endColumn":22},{"ruleId":"176","severity":1,"message":"212","line":69,"column":9,"nodeType":"178","messageId":"179","endLine":69,"endColumn":14},{"ruleId":"176","severity":1,"message":"213","line":74,"column":9,"nodeType":"178","messageId":"179","endLine":74,"endColumn":15},{"ruleId":"176","severity":1,"message":"214","line":119,"column":11,"nodeType":"178","messageId":"179","endLine":119,"endColumn":15},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"180","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"215","line":1,"column":38,"nodeType":"178","messageId":"179","endLine":1,"endColumn":44},{"ruleId":"176","severity":1,"message":"216","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"176","severity":1,"message":"217","line":7,"column":11,"nodeType":"178","messageId":"179","endLine":7,"endColumn":23},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'addMessages' is assigned a value but never used.",["221"],"'Menu' is defined but never used.","'io' is defined but never used.","'userApi' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'TablePagination' is defined but never used.","'isFindQuickGame' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'curUser._id', 'joinRoom', 'playRooms', and 'socket'. Either include them or remove the dependency array.",["222"],"'leaveRoom' is assigned a value but never used.","'response' is assigned a value but never used.",["223"],"'SportsHockeyRounded' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["224"],"'moves' is assigned a value but never used.","'arrow' is assigned a value but never used.","'status' is assigned a value but never used.","'sort' is assigned a value but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'renderSquare' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"225","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [socket]",{"range":"234","text":"235"},"Update the dependencies array to be: [messages, socket]",{"range":"236","text":"237"},"Update the dependencies array to be: [curUser._id, joinRoom, playRooms, socket]",{"range":"238","text":"239"},{"range":"240","text":"235"},"Update the dependencies array to be: [handleClick, socket]",{"range":"241","text":"242"},[2689,2691],"[socket]",[2091,2101],"[messages, socket]",[6035,6037],"[curUser._id, joinRoom, playRooms, socket]",[1082,1084],[1245,1253],"[handleClick, socket]"]