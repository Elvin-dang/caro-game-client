
[{"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\index.js":"1","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\App.js":"2","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\reportWebVitals.js":"3","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signup.js":"4","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signin.js":"5","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signout.js":"6","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Home.js":"7","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signin.js":"8","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signup.js":"9","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\TopBar.js":"10","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Room.js":"11","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageList.js":"12","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Dashboard.js":"13","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\userApi.js":"14","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Google.js":"15","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Facebook.js":"16","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageRoom.js":"17","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroGame.js":"18","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageItem.js":"19","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroBoard.js":"20","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\axiosClient.js":"21","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\oauthApi.js":"22","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageBox.js":"23","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroRow.js":"24","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroSquare.js":"25","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ActiveAccount.js":"26","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ForgetPassword.js":"27"},{"size":465,"mtime":1608121408204,"results":"28","hashOfConfig":"29"},{"size":1033,"mtime":1608578992263,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":366,"mtime":1608568472183,"results":"32","hashOfConfig":"29"},{"size":368,"mtime":1607513928457,"results":"33","hashOfConfig":"29"},{"size":238,"mtime":1608568242452,"results":"34","hashOfConfig":"29"},{"size":1129,"mtime":1608569335612,"results":"35","hashOfConfig":"29"},{"size":4190,"mtime":1608581606070,"results":"36","hashOfConfig":"29"},{"size":3375,"mtime":1608581799063,"results":"37","hashOfConfig":"29"},{"size":3868,"mtime":1608578167678,"results":"38","hashOfConfig":"29"},{"size":5848,"mtime":1608121408202,"results":"39","hashOfConfig":"29"},{"size":2873,"mtime":1608121408201,"results":"40","hashOfConfig":"29"},{"size":4131,"mtime":1608569110956,"results":"41","hashOfConfig":"29"},{"size":1619,"mtime":1608581199758,"results":"42","hashOfConfig":"29"},{"size":1177,"mtime":1608575175916,"results":"43","hashOfConfig":"29"},{"size":1153,"mtime":1608121408199,"results":"44","hashOfConfig":"29"},{"size":1260,"mtime":1608121408202,"results":"45","hashOfConfig":"29"},{"size":6025,"mtime":1608121408196,"results":"46","hashOfConfig":"29"},{"size":984,"mtime":1608121408201,"results":"47","hashOfConfig":"29"},{"size":524,"mtime":1608121408196,"results":"48","hashOfConfig":"29"},{"size":860,"mtime":1608548355025,"results":"49","hashOfConfig":"29"},{"size":437,"mtime":1608121408194,"results":"50","hashOfConfig":"29"},{"size":1632,"mtime":1608121408200,"results":"51","hashOfConfig":"29"},{"size":1560,"mtime":1608121408197,"results":"52","hashOfConfig":"29"},{"size":1189,"mtime":1608121408198,"results":"53","hashOfConfig":"29"},{"size":2789,"mtime":1608574642043,"results":"54","hashOfConfig":"29"},{"size":8447,"mtime":1608629900137,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1e88sc5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\index.js",[],["122","123"],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\App.js",["124","125"],"import './App.css';\r\nimport Signin from './pages/Signin';\r\nimport Signup from './pages/Signup';\r\nimport Signout from './pages/Signout';\r\nimport Home from './pages/Home';\r\nimport ActiveAccount from './pages/ActiveAccount';\r\nimport ForgetPassword from './pages/ForgetPassword';\r\nimport {BrowserRouter as Router,  Switch,  Route} from \"react-router-dom\";\r\nimport React, { useState, useEffect} from 'react'\r\nfunction App() {\r\n  \r\n  return(\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/signin\">\r\n            <Signin />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n          <Route path=\"/signout\">\r\n            <Signout />\r\n          </Route>\r\n          <Route path=\"/account/activate/:token\">\r\n            <ActiveAccount/>\r\n          </Route>\r\n          <Route path=\"/forget-password\">\r\n            <ForgetPassword/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n)};\r\nexport default App;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\reportWebVitals.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signup.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signin.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Signout.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\Home.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signin.js",["126","127"],"import React, { useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Facebook from './Facebook'\r\nimport Google from './Google'\r\nimport userApi from '../api/userApi';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\"});\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const setRedirectTrue = ()=>{\r\n    setIsRedirect(true);\r\n  }\r\n  const setIsLoadingTrue = ()=> {\r\n    setIsLoading(true);\r\n  }\r\n  const setIsLoadingFalse = ()=> {\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      const response = await userApi.signin(user);\r\n      if(response.token) {\r\n          localStorage.setItem('login', JSON.stringify({\r\n            login:true,\r\n            token:response.token,\r\n          }));\r\n          const curUser = await userApi.getCurUser();   \r\n          localStorage.setItem('curUser', JSON.stringify(curUser));\r\n        setIsLoading(false);\r\n        setIsRedirect(true);\r\n      } else {\r\n          alert(response.message);\r\n      }\r\n    } catch(err) {\r\n      setIsLoading(false);\r\n      if(err.response.status === 401) alert(err.response.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} autoComplete=\"current-password\" />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container mb={2} className={classes.submit}>\r\n            <Grid item xs >\r\n              <Facebook setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Google setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/forget-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Signup.js",["128","129"],"import React, { useState } from 'react';\r\nimport { Avatar, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\", name: \"\"});\r\n  const [repassword, setRepassword] = useState(\"\");\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      e.preventDefault();\r\n      if(user.password !== repassword)\r\n      {\r\n        alert(\"Wrong Re-type password. Please try again!\");\r\n      }else{\r\n        const response = await userApi.signup(user);\r\n        \r\n        alert(response.message);\r\n        setIsRedirect(true);\r\n      }\r\n    }catch(err){\r\n      if(err.response.status === 403) alert(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/signin' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"name\" label=\"Your name\" name=\"name\" \r\n            onChange={e => setUser({ ...user, name: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} autoComplete=\"current-password\" />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Re-type Password\" type=\"password\" id=\"repassword\"\r\n            onChange={e => setRepassword(e.target.value)} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to=\"/signin\" variant=\"body2\">\r\n                Have account already? Signin\r\n              </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\TopBar.js",["130","131","132","133","134"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport {Card, AppBar, Button, Toolbar, Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport io from 'socket.io-client'\r\nimport userApi from '../api/userApi';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  bottom_space: {\r\n      marginBottom: 12, \r\n  },\r\n  title: {\r\n      flexGrow: 1,\r\n  },\r\n  logoutButton: {\r\n      marginLeft: 10,\r\n  },\r\n  link: {\r\n      textDecoration: 'none',\r\n      flexGrow: 1,\r\n  },\r\n  linkProfile: {\r\n      textDecoration: 'none',\r\n  },\r\n  large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n  },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const classes = useStyle();\r\n  const isLoggedIn = props.isLogin;\r\n\r\n  let name = null;\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n      }\r\n\r\n      setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n    event.preventDefault();\r\n    setOpen(false);\r\n    }\r\n  }\r\n  \r\n  const getUserName = () =>\r\n  {\r\n    if( localStorage.getItem('curUser')){\r\n      name = JSON.parse(localStorage.getItem('curUser')).name;\r\n    }\r\n  }\r\n  \r\n  getUserName();\r\n  \r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className=\"title\">\r\n            Hello {!isLoggedIn ? <Button href=\"/signin\" color=\"inherit\">Login</Button>: name}\r\n          </Typography>\r\n          \r\n          {isLoggedIn && (\r\n            <div>\r\n              <Button\r\n              ref={anchorRef}\r\n              aria-controls={open ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              >\r\n                  <AccountCircleIcon fontSize=\"large\"/>\r\n              </Button>\r\n              <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n              {({ TransitionProps, placement }) => (\r\n                  <Grow\r\n                  {...TransitionProps}\r\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                  >\r\n                  <Paper>\r\n                      <ClickAwayListener onClickAway={handleClose}>\r\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                          <Link to='/profile' className={classes.linkProfile}>\r\n                              <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                          </Link>\r\n                          <Link to='/signout' className={classes.linkProfile}>\r\n                              <MenuItem onClick={handleClose}>Sign out</MenuItem>\r\n                          </Link>\r\n                      </MenuList>\r\n                      </ClickAwayListener>\r\n                  </Paper>\r\n                  </Grow>\r\n              )}\r\n              </Popper>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Room.js",["135","136","137","138","139","140"],"import React,{ useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {Card, CardContent, Grid, Link, Button,Paper, Box} from '@material-ui/core';\r\nimport CaroGame from './CaroGame';\r\nimport MessageRoom from '../components/MessageRoom';\r\nexport default function Room(props) {    \r\n    const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n    const socket = props.socket;\r\n    const roomID = useParams().id;\r\n    \r\n    const [room, setRoom] = useState({\r\n        roomId: null,\r\n        hostName: null,\r\n        status: null,\r\n        nextTurn: 1,\r\n        player1: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        player2: {\r\n            id: null,\r\n            name: null\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        socket.on('roomJoined',  response => setRoom(response));\r\n        socket.on('roomUpdated', response => setRoom(response));\r\n    }, []);\r\n\r\n    const joinPlayer = (position) =>{\r\n        if(position === 1 && room.player2.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 1 && room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                },\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                },\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    const leavePlayer = () => {\r\n        if(room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n        if(room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handlePlay = () => {\r\n        if(room.player1.id === null || room.player2.id === null) alert('Cần 2 người chơi để bắt đầu');\r\n        else socket.emit(\"updateRoom\", {\r\n            ...room,\r\n            status: 1\r\n        });\r\n    } \r\n\r\n    const handleRestart = () => {\r\n        socket.emit(\"restartGame\", {\r\n            ...room,\r\n            nextTurn: 1,\r\n            status: 0\r\n        });\r\n    }\r\n\r\n    const isMyTurn = () => {\r\n        if(room.status === 0) return false;\r\n        else {\r\n            if(curUser._id === room.player1.id) {\r\n                if(room.nextTurn === 1) return true;\r\n                return false;\r\n            } else if(curUser._id === room.player2.id) {\r\n                if(room.nextTurn === 2) return true;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h1>Room {roomID}</h1>\r\n            </div>\r\n            <Grid container>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={10}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} md={8}>\r\n                                    <Grid container justify='center'>\r\n                                        <CaroGame isStart={isMyTurn()} room={room} socket={socket}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <h3 style={{color: room.nextTurn === 1 ? 'red' : 'black'}}>Người chơi (X): {room.player1.name ? room.player1.name : <Button onClick={() => joinPlayer(1)} style={{margin:'15px'}} variant=\"contained\">Tham gia</Button>}</h3>\r\n                                    <h3 style={{color: room.nextTurn === 2 ? 'red' : 'black'}}>Người chơi (O): {room.player2.name ? room.player2.name : <Button onClick={() => joinPlayer(2)} style={{margin:'15px'}} variant=\"contained\">Tham gia</Button>}</h3>\r\n                                    <Button onClick={() => leavePlayer()} style={{marginBottom:'15px'}} variant=\"contained\" color=\"secondary\" disabled={room.status === 0 ? false : true}>Làm khán giả</Button>\r\n                                    <Button onClick={() => room.status === 0 ? handlePlay() : handleRestart()} style={{marginBottom:'30px', display: 'block'}} variant=\"contained\" color=\"primary\">{room.status === 0 ? \"Bẳt đầu\" : \"Chơi lại\"}</Button>\r\n                                    <MessageRoom socket={socket} roomId={room.roomId}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={1}/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>    \r\n    )\r\n  }\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageList.js",["141","142"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    margin: theme.spacing(2, 2),\r\n    width: 400,\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '92%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n  \tmargin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n\tconst classes = useStyles();\r\n\tconst [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\tconst messagesEndRef = useRef(null);\r\n    const {socket} = props;\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const { isLogin} = props;\r\n    if(isLogin !== true)\r\n    {\r\n        setIsRedirect(true);\r\n    }\r\n\r\n\r\n\tconst addMessages = () => {\r\n\t\t//setMessages(m => [...m, {name: \"Vinh\", message:\"hhaha\"}]);\r\n        if(message!==\"\"){\r\n            setMessages(m => [...m, {name: getUserName(), message:message}]);\r\n            setMessage(\"\");\r\n        }\r\n\t};\r\n    const getUserName = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser')).name;\r\n        }\r\n        else return 0;\r\n    }\r\n    const sendNewMessage = ()=> {\r\n        const name = getUserName();\r\n        socket.emit(\"newMessage\", {message: message, name: name}); //gửi event về server\r\n        setMessage(\"\");\r\n    }\r\n\r\n\r\n\tuseEffect(()=>{\r\n        socket.on('newMessage',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])});\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n    return (\r\n        <div>\r\n        { (isRedirect === true) ? (<Redirect to='/signin' />) :(\r\n        <div className={classes.root} id=\"messages\"\t>\r\n            <div className={classes.messlist}>\r\n                {messages.map((item, index) =>\r\n                    <Message key={index} message={item}/>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n        \t<div className={classes.searchIcon}>\r\n      \t\t\t<TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message}/>\r\n                <button onClick={sendNewMessage}>\r\n    \t\t\t\t<SendIcon color=\"primary\" />\r\n    \t\t\t</button>\r\n    \t\t</div>\r\n        </div>\r\n        )\r\n    }\r\n    </div>\r\n    )\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Dashboard.js",["143","144","145","146","147"],"import React,{useState, useEffect} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Card,CardContent,Table,TableBody ,TableCell ,TableContainer ,TableHead ,Paper ,TableRow  ,TablePagination, Grid, Link, Button} from '@material-ui/core';\r\nimport io from 'socket.io-client'\r\nimport { Redirect, useHistory} from 'react-router-dom';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport default function Dashboard(props) {\r\n  const history = useHistory();\r\n  const [usersOnline,setUsersOnline] = useState([]);\r\n  const [playRooms,setPlayRooms] = useState([]);\r\n  const isLoggedIn = props.isLogin;\r\n  const socket = props.socket;\r\n  const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n\r\n  if(isLoggedIn === true)\r\n  {\r\n    if(curUser!==null){\r\n      socket.emit(\"login\", {\r\n        id: curUser._id, \r\n        name: curUser.name\r\n      }); \r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    socket.on('updateUsersOnlineList', (response) => setUsersOnline(response)); \r\n    socket.on('updateRoomsList',  (response) => setPlayRooms(response));\r\n  }, []);\r\n  \r\n  const createRoom = () => {\r\n    socket.emit(\"createRoom\", curUser.name);\r\n    joinRoom((playRooms.length + 1));\r\n  }\r\n\r\n  const joinRoom = (id) => {\r\n    socket.emit(\"joinRoom\", id);\r\n    const path = \"room/\" + id;\r\n    history.push(path);\r\n  }\r\n\r\n  const leaveRoom = () =>{\r\n    socket.emit(\"leaveRoom\", curUser._id);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      {!isLoggedIn ? <Redirect to=\"/signin\"/>: \r\n            <div>\r\n              <div style={{textAlign: 'center',padding:'10px'}}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => createRoom()} >Tạo phòng mới</Button>\r\n              </div>\r\n              <Grid container >\r\n                <Grid item xs={12}>\r\n                  <Grid container justify=\"center\" >\r\n                  <TableContainer style={{width:'60%'}} component={Paper}>\r\n                    <Table >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <StyledTableCell>ID room</StyledTableCell>\r\n                          <StyledTableCell align=\"right\">Người tạo</StyledTableCell>\r\n                          <StyledTableCell align=\"right\">Trạng thái</StyledTableCell>\r\n                          <StyledTableCell align=\"right\"></StyledTableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                      {playRooms.map((room) => (\r\n                        <StyledTableRow key={room.roomId} >\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {room.roomId}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">{room.hostName}</StyledTableCell>\r\n                          <StyledTableCell align=\"right\">{room.status === 0 ? 'đang chờ' : 'đã chơi'}</StyledTableCell>\r\n                          <StyledTableCell align=\"right\"><Button color=\"primary\" onClick={() => joinRoom(room.roomId)}>Tham gia</Button></StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                    <Card style={{margin:'10px'}}>\r\n                      <CardContent style={{textAlign: 'left'}}>\r\n                      <h2>List Users Online</h2>\r\n                      {usersOnline.map(item =>\r\n                            <li key={item.userId}><span>{item.userName}</span></li>\r\n                      )}\r\n                      </CardContent>\r\n                    </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n            </div>\r\n          }\r\n    </div>\r\n  );\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\userApi.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Google.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\Facebook.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageRoom.js",["148"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageBox from './MessageBox';\r\nexport default function MessageRoom(props) {\r\n    const {socket, roomId} = props;\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n    const getUserName = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser')).name;\r\n        }\r\n        else return 0;\r\n    }\r\n\r\n    const sendNewMessage = (e)=> {\r\n        e.preventDefault()\r\n        if(message!==\"\"){\r\n            const name = getUserName();\r\n            socket.emit(\"chat-room\", {message: message, name: name, roomId: roomId}); //gửi event về server\r\n            setMessage(\"\");\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        socket.on('server-chat-room',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        });\r\n        }, []);\r\n    return (\r\n        <MessageBox messagesEndRef={messagesEndRef} messages={messages} addMessages={sendNewMessage} message={message} setMessage={setMessage}/>\r\n    )\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroGame.js",["149","150","151","152","153","154","155"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport CaroBoard from './CaroBoard';\r\nimport { io } from 'socket.io-client';\r\nimport { SportsHockeyRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnBold: {\r\n        fontWeight: 'bold',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    gameInfo: {\r\n        marginLeft: '20px'\r\n    }\r\n}));\r\n\r\nconst size = 20;\r\nconst winCondition = 5;\r\n\r\nconst CaroGame = ({ socket, isStart, room }) => {\r\n    let tmpArr = Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      tmpArr[i] = Array(size).fill(null);\r\n    }\r\n\r\n    const [gameConfig, setGameConfig] = useState({\r\n        width: size,\r\n        height: size,\r\n        history: [{\r\n            squares: tmpArr,\r\n            location: null\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        isDescending: true\r\n    });\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        socket.on('updateGameConfig', response => setGameConfig(response));\r\n        socket.on('opponentMove',  response => handleClick(response.i, response.j));\r\n    }, [socket]);\r\n\r\n    const history = gameConfig.history;\r\n    const current = history[gameConfig.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let moves = history.map((step, move) => {\r\n        const desc = move ?\r\n        'Go to move #' + move + ' (' + step.location.x + ',' + step.location.y + ')' :\r\n        'Go to game start';\r\n        return (gameConfig.stepNumber === move) ? (\r\n            <li key={move}>\r\n                <Button className={classes.btnBold} onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        ) : (\r\n            <li key={move}>\r\n                <Button onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        );\r\n    })\r\n    if(gameConfig.isDescending) {\r\n        moves = moves.reverse();\r\n    }\r\n\r\n    let arrow = gameConfig.isDescending ? '↓' : '↑';\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner.val;\r\n    } else {\r\n        status = 'Next player: ' + (gameConfig.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    const handleClick = (i, j) => {\r\n        if(!isStart) return;\r\n        const newHistory = gameConfig.history.slice(0, gameConfig.stepNumber + 1);\r\n        const current = history[gameConfig.stepNumber];\r\n        const squares = current.squares.slice();\r\n\r\n        current.squares.map((row, index) => {\r\n            squares[index] = current.squares[index].slice();\r\n            return true;\r\n        });\r\n\r\n        if(calculateWinner(squares) || squares[i][j]) return;\r\n\r\n        squares[i][j] = gameConfig.xIsNext ? 'X' : 'O';\r\n        \r\n        socket.emit('nextMove', {\r\n            i: i,\r\n            j: j,\r\n            room: room,\r\n            gameConfig: {\r\n                ...gameConfig,\r\n                history: newHistory.concat([{\r\n                    squares: squares,\r\n                    location: {x: i, y: j}\r\n                }]),\r\n                stepNumber: newHistory.length,\r\n                xIsNext: !gameConfig.xIsNext\r\n            }\r\n        });\r\n    }\r\n\r\n    const sort = () => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            isDescending: !gameConfig.isDescending\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.game}>\r\n                <div>\r\n                    <CaroBoard\r\n                        squares={current.squares}\r\n                        onClick={(i, j) => handleClick(i, j)}\r\n                        winner={winner}\r\n                        isStart={isStart}\r\n                    />\r\n                </div>\r\n                {/* <div className={classes.gameInfo}>\r\n                    <div>\r\n                        <Button onClick={sort}>Thứ tự bước {arrow}</Button>\r\n                    </div>\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    let win;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      for (let j = 0; j < squares[i].length; j++) {\r\n        if (!squares[i][j]) continue;\r\n        if (j <= squares[i].length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRight'};\r\n        }\r\n        if (i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToDown'};\r\n        }\r\n        if (j <= squares[i].length - winCondition && i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRightDown'};\r\n        }\r\n        if (i <= squares.length - winCondition && j >= winCondition - 1) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToLeftDown'};\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default CaroGame;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageItem.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroBoard.js",["156"],"import React from 'react';\r\nimport CaroSquare from './CaroSquare';\r\nimport CaroRow from './CaroRow';\r\n\r\nconst CaroBoard = ({ squares, onClick, winner, isStart }) => {\r\n    const board = squares.map((row, index) => <CaroRow winner={winner} rowIdx={index} row={row} onClick={onClick} isStart={isStart} key={\"r\" + index}/>);\r\n    const renderSquare = (i) => <CaroSquare value={squares[i]} onClick={() => onClick(i)}/>;\r\n\r\n    return (\r\n        <div>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaroBoard;\r\n","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\axiosClient.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\api\\oauthApi.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\MessageBox.js",["157","158","159","160"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    margin: theme.spacing(2, 2),\r\n    width: 400,\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '92%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n      margin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n  const classes = useStyles();\r\n  const { messagesEndRef, addMessages, messages, message, setMessage } = props;\r\n  return (\r\n      <div className={classes.root} id=\"messages\"  >\r\n        <div className={classes.messlist}>\r\n            {messages.map((item, index) =>\r\n                <Message key={index} message={item}/>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n        <form action=\"#\" onSubmit={addMessages} className={classes.searchIcon}>\r\n          <TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message} autoComplete=\"off\" />\r\n          <button type=\"submit\">\r\n            <SendIcon color=\"primary\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n}","C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroRow.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\components\\CaroSquare.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ActiveAccount.js",[],"C:\\Users\\AdMins\\Desktop\\DACK\\game-caro-client\\src\\pages\\ForgetPassword.js",["161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":9,"column":17,"nodeType":"168","messageId":"169","endLine":9,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":9,"column":27,"nodeType":"168","messageId":"169","endLine":9,"endColumn":36},{"ruleId":"166","severity":1,"message":"171","line":2,"column":60,"nodeType":"168","messageId":"169","endLine":2,"endColumn":68},{"ruleId":"166","severity":1,"message":"172","line":2,"column":70,"nodeType":"168","messageId":"169","endLine":2,"endColumn":86},{"ruleId":"166","severity":1,"message":"171","line":2,"column":44,"nodeType":"168","messageId":"169","endLine":2,"endColumn":52},{"ruleId":"166","severity":1,"message":"172","line":2,"column":54,"nodeType":"168","messageId":"169","endLine":2,"endColumn":70},{"ruleId":"166","severity":1,"message":"170","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"173","line":2,"column":9,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"174","line":2,"column":74,"nodeType":"168","messageId":"169","endLine":2,"endColumn":78},{"ruleId":"166","severity":1,"message":"175","line":10,"column":8,"nodeType":"168","messageId":"169","endLine":10,"endColumn":10},{"ruleId":"166","severity":1,"message":"176","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":15},{"ruleId":"166","severity":1,"message":"173","line":3,"column":9,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":3,"column":15,"nodeType":"168","messageId":"169","endLine":3,"endColumn":26},{"ruleId":"166","severity":1,"message":"178","line":3,"column":34,"nodeType":"168","messageId":"169","endLine":3,"endColumn":38},{"ruleId":"166","severity":1,"message":"179","line":3,"column":47,"nodeType":"168","messageId":"169","endLine":3,"endColumn":52},{"ruleId":"166","severity":1,"message":"180","line":3,"column":54,"nodeType":"168","messageId":"169","endLine":3,"endColumn":57},{"ruleId":"181","severity":1,"message":"182","line":29,"column":8,"nodeType":"183","endLine":29,"endColumn":10,"suggestions":"184"},{"ruleId":"166","severity":1,"message":"185","line":46,"column":8,"nodeType":"168","messageId":"169","endLine":46,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":71,"column":8,"nodeType":"183","endLine":71,"endColumn":18,"suggestions":"186"},{"ruleId":"166","severity":1,"message":"187","line":3,"column":99,"nodeType":"168","messageId":"169","endLine":3,"endColumn":114},{"ruleId":"166","severity":1,"message":"178","line":3,"column":122,"nodeType":"168","messageId":"169","endLine":3,"endColumn":126},{"ruleId":"166","severity":1,"message":"175","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":10},{"ruleId":"181","severity":1,"message":"182","line":45,"column":6,"nodeType":"183","endLine":45,"endColumn":8,"suggestions":"188"},{"ruleId":"166","severity":1,"message":"189","line":58,"column":9,"nodeType":"168","messageId":"169","endLine":58,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":29,"column":12,"nodeType":"183","endLine":29,"endColumn":14,"suggestions":"190"},{"ruleId":"166","severity":1,"message":"175","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":12},{"ruleId":"166","severity":1,"message":"191","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":29},{"ruleId":"181","severity":1,"message":"192","line":46,"column":8,"nodeType":"183","endLine":46,"endColumn":16,"suggestions":"193"},{"ruleId":"166","severity":1,"message":"194","line":66,"column":17,"nodeType":"168","messageId":"169","endLine":66,"endColumn":22},{"ruleId":"166","severity":1,"message":"195","line":69,"column":9,"nodeType":"168","messageId":"169","endLine":69,"endColumn":14},{"ruleId":"166","severity":1,"message":"196","line":74,"column":9,"nodeType":"168","messageId":"169","endLine":74,"endColumn":15},{"ruleId":"166","severity":1,"message":"197","line":116,"column":11,"nodeType":"168","messageId":"169","endLine":116,"endColumn":15},{"ruleId":"166","severity":1,"message":"198","line":7,"column":11,"nodeType":"168","messageId":"169","endLine":7,"endColumn":23},{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"199","line":1,"column":38,"nodeType":"168","messageId":"169","endLine":1,"endColumn":44},{"ruleId":"166","severity":1,"message":"200","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":18},{"ruleId":"166","severity":1,"message":"170","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Card' is defined but never used.","'Menu' is defined but never used.","'io' is defined but never used.","'userApi' is defined but never used.","'CardContent' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'addMessages' is assigned a value but never used.",["204"],"'TablePagination' is defined but never used.",["205"],"'leaveRoom' is assigned a value but never used.",["206"],"'SportsHockeyRounded' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["207"],"'moves' is assigned a value but never used.","'arrow' is assigned a value but never used.","'status' is assigned a value but never used.","'sort' is assigned a value but never used.","'renderSquare' is assigned a value but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"208","fix":"212"},{"desc":"208","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [socket]",{"range":"216","text":"217"},"Update the dependencies array to be: [messages, socket]",{"range":"218","text":"219"},{"range":"220","text":"217"},{"range":"221","text":"217"},"Update the dependencies array to be: [handleClick, socket]",{"range":"222","text":"223"},[919,921],"[socket]",[2091,2101],"[messages, socket]",[1409,1411],[1082,1084],[1245,1253],"[handleClick, socket]"]
