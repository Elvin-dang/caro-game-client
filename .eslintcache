[{"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\index.js":"1","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\reportWebVitals.js":"2","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\App.js":"3","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Signin.js":"4","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Signup.js":"5","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Home.js":"6","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Signout.js":"7","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\ForgetPassword.js":"8","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\ActiveAccount.js":"9","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageList.js":"10","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Room.js":"11","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Signup.js":"12","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Dashboard.js":"13","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\TopBar.js":"14","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Signin.js":"15","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\api\\userApi.js":"16","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Profile.js":"17","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroGame.js":"18","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageItem.js":"19","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\api\\axiosClient.js":"20","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Facebook.js":"21","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageRoom.js":"22","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Google.js":"23","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\InfomationBox.js":"24","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\api\\oauthApi.js":"25","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageBox.js":"26","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroBoard.js":"27","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroRow.js":"28","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroSquare.js":"29","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\AnotherProfile.js":"30","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\HistoryBox.js":"31","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\HistoryItem.js":"32","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\TopPlayer.js":"33"},{"size":465,"mtime":1608347936281,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1608017668760,"results":"36","hashOfConfig":"35"},{"size":1138,"mtime":1609229566367,"results":"37","hashOfConfig":"35"},{"size":368,"mtime":1608017668760,"results":"38","hashOfConfig":"35"},{"size":366,"mtime":1608720048898,"results":"39","hashOfConfig":"35"},{"size":1493,"mtime":1609254293368,"results":"40","hashOfConfig":"35"},{"size":238,"mtime":1608720048898,"results":"41","hashOfConfig":"35"},{"size":8447,"mtime":1608720048897,"results":"42","hashOfConfig":"35"},{"size":2789,"mtime":1608720048897,"results":"43","hashOfConfig":"35"},{"size":2873,"mtime":1608347936274,"results":"44","hashOfConfig":"35"},{"size":9743,"mtime":1609147507627,"results":"45","hashOfConfig":"35"},{"size":3333,"mtime":1608720048896,"results":"46","hashOfConfig":"35"},{"size":13063,"mtime":1609254175891,"results":"47","hashOfConfig":"35"},{"size":3836,"mtime":1608889423939,"results":"48","hashOfConfig":"35"},{"size":4190,"mtime":1608720048895,"results":"49","hashOfConfig":"35"},{"size":1582,"mtime":1609250201625,"results":"50","hashOfConfig":"35"},{"size":5017,"mtime":1609254578706,"results":"51","hashOfConfig":"35"},{"size":6433,"mtime":1609147507591,"results":"52","hashOfConfig":"35"},{"size":984,"mtime":1608347936274,"results":"53","hashOfConfig":"35"},{"size":855,"mtime":1609254284839,"results":"54","hashOfConfig":"35"},{"size":1153,"mtime":1608347936273,"results":"55","hashOfConfig":"35"},{"size":1240,"mtime":1609147507626,"results":"56","hashOfConfig":"35"},{"size":1177,"mtime":1608720048856,"results":"57","hashOfConfig":"35"},{"size":1709,"mtime":1609175444833,"results":"58","hashOfConfig":"35"},{"size":437,"mtime":1608347936270,"results":"59","hashOfConfig":"35"},{"size":1648,"mtime":1609147507626,"results":"60","hashOfConfig":"35"},{"size":524,"mtime":1608347936271,"results":"61","hashOfConfig":"35"},{"size":1560,"mtime":1608347936272,"results":"62","hashOfConfig":"35"},{"size":1189,"mtime":1608347936272,"results":"63","hashOfConfig":"35"},{"size":2101,"mtime":1609253948693,"results":"64","hashOfConfig":"35"},{"size":730,"mtime":1609253387457,"results":"65","hashOfConfig":"35"},{"size":1495,"mtime":1609253575025,"results":"66","hashOfConfig":"35"},{"size":1342,"mtime":1609253297474,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1we8c9i",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\index.js",[],["146","147"],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\reportWebVitals.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\App.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Signin.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Signup.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Home.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\Signout.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\ForgetPassword.js",["148"],"import React, { useEffect, useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert style={{width: '100%'}} elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(5)\r\n    },\r\n    linkProfile: {\r\n        textDecoration: 'none'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const [info, setInfo] = useState({\r\n      email: \"\", \r\n      token: \"\",\r\n      password: \"\",\r\n      retypePassword: \"\"\r\n    });\r\n    const [process, setProcess] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    // useEffect(() => {\r\n    //     setIsLoading(false);\r\n    //     setProcess(1);\r\n    //     setInfo({\r\n    //         email: \"\", \r\n    //         token: \"\",\r\n    //         password: \"\",\r\n    //         retypePassword: \"\"\r\n    //     });\r\n    // }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.forgetPassword(info.email);\r\n            if(response.result) {\r\n                setProcess(2);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            if(err.response.status === 403) alert(err.response.data.message);\r\n            else if(err.response.status === 400) alert(err.response.data.details[0].message);\r\n            else alert('Server not response');\r\n        }\r\n    };\r\n\r\n    const handleSubmitConfirmToken = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.confirmToken(info.token);\r\n            if(response.result) {\r\n                setProcess(3);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            alert('Wrong reset password code');\r\n        }\r\n    }\r\n\r\n    const handleSubmitChangePassword = async (e) => {\r\n        try{\r\n            e.preventDefault();\r\n            if(info.password !== info.retypePassword) \r\n            {\r\n                alert(\"Wrong Re-type password. Please try again!\");\r\n                return;\r\n            }\r\n            setIsLoading(true);\r\n\r\n            const response = await userApi.resetPassword(info.token, info.password);\r\n            if(response.result) {\r\n                setProcess(4);\r\n                setIsLoading(false);\r\n            }\r\n        } catch(err) {\r\n            setIsLoading(false);\r\n            if(err.response.status === 400) alert(err.response.data.details[0].message);\r\n            else alert('Server not response');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Forgot password\r\n            </Typography>\r\n            {process === 1 ? // Điền email\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Fill your email to send reset password code\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus \r\n                        onChange={e => setInfo({ ...info, email: e.target.value})} value={info.email}  />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Send code to email\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Go to sign in\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                : process === 2 ? // Điền reset code\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmitConfirmToken} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Type reset password code here\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"resetCode\" label=\"Reset Code\" name=\"Reset Code\" autoFocus \r\n                        onChange={e => setInfo({ ...info, token: e.target.value})} value={info.token}  />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Confirm reset code\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Go to sign in\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                : process === 3 ? // Điền mật khẩu mới\r\n                <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmitChangePassword} autoComplete=\"off\">\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Enter new password\r\n                    </Typography>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n                        onChange={e => setInfo({ ...info, password: e.target.value})} autoComplete=\"current-password\" value={info.password}/>\r\n                    <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Re-type Password\" type=\"password\" id=\"repassword\"\r\n                        onChange={e => setInfo({ ...info, retypePassword: e.target.value})} value={info.retypePassword} />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change password\r\n                    </Button>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Link to=\"/signin\" variant=\"body2\">\r\n                            Go to sign in\r\n                        </Link>\r\n                    </Grid>\r\n                </form>\r\n                :\r\n                <>\r\n                    <Alert severity=\"success\">Đặt lại mật khẩu thành công</Alert>\r\n                    <Link to='/signin' className={classes.linkProfile}>\r\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\r\n                            Đi đến đăng nhập\r\n                        </Button>\r\n                    </Link>\r\n                </>\r\n            }   \r\n        </div>\r\n        </Container>\r\n    );\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\ActiveAccount.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageList.js",["149","150"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    margin: theme.spacing(2, 2),\r\n    width: 400,\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '92%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n  \tmargin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n\tconst classes = useStyles();\r\n\tconst [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\tconst messagesEndRef = useRef(null);\r\n    const {socket} = props;\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const { isLogin} = props;\r\n    if(isLogin !== true)\r\n    {\r\n        setIsRedirect(true);\r\n    }\r\n\r\n\r\n\tconst addMessages = () => {\r\n\t\t//setMessages(m => [...m, {name: \"Vinh\", message:\"hhaha\"}]);\r\n        if(message!==\"\"){\r\n            setMessages(m => [...m, {name: getUserName(), message:message}]);\r\n            setMessage(\"\");\r\n        }\r\n\t};\r\n    const getUserName = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser')).name;\r\n        }\r\n        else return 0;\r\n    }\r\n    const sendNewMessage = ()=> {\r\n        const name = getUserName();\r\n        socket.emit(\"newMessage\", {message: message, name: name}); //gửi event về server\r\n        setMessage(\"\");\r\n    }\r\n\r\n\r\n\tuseEffect(()=>{\r\n        socket.on('newMessage',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])});\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n\r\n    return (\r\n        <div>\r\n        { (isRedirect === true) ? (<Redirect to='/signin' />) :(\r\n        <div className={classes.root} id=\"messages\"\t>\r\n            <div className={classes.messlist}>\r\n                {messages.map((item, index) =>\r\n                    <Message key={index} message={item}/>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n        \t<div className={classes.searchIcon}>\r\n      \t\t\t<TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message}/>\r\n                <button onClick={sendNewMessage}>\r\n    \t\t\t\t<SendIcon color=\"primary\" />\r\n    \t\t\t</button>\r\n    \t\t</div>\r\n        </div>\r\n        )\r\n    }\r\n    </div>\r\n    )\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Room.js",["151","152","153","154","155","156","157"],"import React,{ useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {Card, CardContent, Grid, Link, Button,Paper, Box} from '@material-ui/core';\r\nimport swal from 'sweetalert';\r\nimport CaroGame from './CaroGame';\r\nimport MessageRoom from '../components/MessageRoom';\r\nimport { RoomOutlined } from '@material-ui/icons';\r\nexport default function Room(props) {    \r\n    const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n    const socket = props.socket;\r\n    const roomID = useParams().id;\r\n    \r\n    const [room, setRoom] = useState({\r\n        roomId: null,\r\n        hostName: null,\r\n        status: null,\r\n        nextTurn: 1,\r\n        player1: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        player2: {\r\n            id: null,\r\n            name: null\r\n        },\r\n        curGame: null,\r\n        chat: [],\r\n    });\r\n    const [isEndGame, setIsEndGame] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        socket.on('roomJoined',  response => setRoom(response));\r\n        socket.on('roomUpdated', response => setRoom(response));\r\n        socket.on('gameResult', response => showGameResult(response));\r\n    }, []);\r\n\r\n    const joinPlayer = (position) =>{\r\n        if(position === 1 && room.player2.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 1 && room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                },\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id !== curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n        else if (position === 2 && room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                },\r\n                player2: {\r\n                    id: curUser._id,\r\n                    name: curUser.name\r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    const leavePlayer = () => {\r\n        if(room.player1.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player1: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n        if(room.player2.id === curUser._id)\r\n        {\r\n            socket.emit(\"updateRoom\", {\r\n                ...room,\r\n                player2: {\r\n                    id: null,\r\n                    name: null\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handlePlay = () => {\r\n        if(room.player1.id === null || room.player2.id === null) swal(`Room ${room.roomId}`, 'Cần 2 người chơi để bắt đầu', \"error\");\r\n        else if(curUser._id === room.player1.id || curUser._id === room.player2.id) {\r\n            socket.emit(\"startGame\", {\r\n                ...room,\r\n                nextTurn: 1,\r\n                status: 1,\r\n                curGame: {\r\n                    date: Date.now,\r\n                    player1: {\r\n                        id: room.player1.id,\r\n                        name: room.player1.name\r\n                    },\r\n                    player2: {\r\n                        id: room.player2.id,\r\n                        name: room.player2.name\r\n                    },\r\n                    winner: 0,\r\n                    move: [],\r\n                    chat: []\r\n                }\r\n            });\r\n        }\r\n        else swal(`Room ${room.roomId}`, 'Bạn phải là một trong hai người chơi chính để thực hiện chức năng này', \"error\");\r\n    } \r\n\r\n    const handleDefeat = () => {\r\n        if(curUser._id === room.player1.id || curUser._id === room.player2.id) {\r\n            swal({\r\n                title: \"Bạn có chắc chắn đầu hàng trước đối thủ ?\",\r\n                icon: \"warning\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"Xác nhận\",\r\n                        value: \"confirm\"\r\n                    },\r\n                    cancel: \"Không\"\r\n                },\r\n            })\r\n            .then((value) => {\r\n                if(value === \"confirm\") {\r\n                    socket.emit(\"gameResult\", {\r\n                        room: {\r\n                            ...room,\r\n                            status: 0\r\n                        },\r\n                        winner: curUser._id === room.player1.id ? 2 : 1,\r\n                        resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else swal(`Room ${room.roomId}`, 'Bạn phải là một trong hai người chơi chính để thực hiện chức năng này', \"error\");\r\n    }\r\n\r\n    const isMyTurn = () => {\r\n        if(room.status === 0) return false;\r\n        else {\r\n            if(curUser._id === room.player1.id) {\r\n                if(room.nextTurn === 1) return true;\r\n                return false;\r\n            } else if(curUser._id === room.player2.id) {\r\n                if(room.nextTurn === 2) return true;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    const showGameResult = (response) => {\r\n        const { winner, loser, resultType} = response;\r\n        if(resultType !== \"winLose\") {\r\n            swal(\"Kết quả\", \"Hòa\", \"info\");\r\n        } else {\r\n            if(curUser._id === winner.id) {\r\n                swal(\"Bạn là người chiến thắng\", \r\n                    `Elo ban đầu: ${winner.first_elo}\\n` +\r\n                    `Tăng lên:    ${winner.final_elo} ↑`, \r\n                    \"success\"\r\n                );\r\n            } else if (curUser._id === loser.id) {\r\n                    swal(\"Bạn đã thua\", \r\n                    `Elo ban đầu: ${loser.first_elo}\\n` +\r\n                    `Giảm xuống:  ${loser.final_elo} ↓`, \r\n                    \"error\"\r\n                );\r\n            } else {\r\n                if(winner.id === room.player1.id)\r\n                    swal(\"Kết quả\", \r\n                        `Người chơi X chiến thắng`, \r\n                        \"success\"\r\n                    );\r\n                else\r\n                    swal(\"Kết quả\", \r\n                        `Người chơi O chiến thắng`, \r\n                        \"success\"\r\n                    );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{textAlign:'center'}}>\r\n                <h1>Room {roomID}</h1>\r\n            </div>\r\n            <Grid container>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={1}/>\r\n                        <Grid item xs={10}>\r\n                            <Grid container spacing={5}>\r\n                                <Grid item xs={12} md={8}>\r\n                                    <Grid container justify='center'>\r\n                                        <CaroGame isStart={isMyTurn()} room={room} socket={socket}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <Card variant=\"outlined\" style={{backgroundColor: room.nextTurn === 1 ? 'red' : 'white'}}>\r\n                                        <CardContent>\r\n                                            <h3>Người chơi (X): {room.player1.name ? room.player1.name : <Button onClick={() => joinPlayer(1)} style={{margin:'15px'}} variant=\"contained\">Tham gia</Button>}</h3>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <Card variant=\"outlined\" style={{backgroundColor: room.nextTurn === 2 ? 'red' : 'white', marginTop: '10px', marginBottom: '15px'}}>\r\n                                        <CardContent>\r\n                                            <h3>Người chơi (O): {room.player2.name ? room.player2.name : <Button onClick={() => joinPlayer(2)} style={{margin:'15px'}} variant=\"contained\">Tham gia</Button>}</h3>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <Grid container direction=\"row\" style={{marginBottom:'30px'}} justify=\"center\" >\r\n                                        <Button onClick={() => room.status === 0 ? handlePlay() : handleDefeat()} variant=\"contained\" color=\"primary\">{room.status === 0 ? \"Bẳt đầu\" : \"Đầu hàng\"}</Button>\r\n                                        <Button onClick={() => leavePlayer()} style={{marginLeft:'30px'}} variant=\"contained\" color=\"secondary\" disabled={room.status === 0 ? false : true}>Làm khán giả</Button>\r\n                                    </Grid>\r\n                                    <MessageRoom socket={socket} room={room}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={1}/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>    \r\n    )\r\n  }\r\n","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Signup.js",["158","159"],"import React, { useState } from 'react';\r\nimport { Avatar, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport userApi from '../api/userApi';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\", name: \"\"});\r\n  const [repassword, setRepassword] = useState(\"\");\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      e.preventDefault();\r\n      if(user.password !== repassword)\r\n      {\r\n        alert(\"Wrong Re-type password. Please try again!\");\r\n      }else{\r\n        const response = await userApi.signup(user);\r\n        alert(response.message);\r\n        setIsRedirect(true);\r\n      }\r\n    }catch(err){\r\n      if(err.response.status === 403) alert(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/signin' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"name\" label=\"Your name\" name=\"name\" \r\n            onChange={e => setUser({ ...user, name: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Re-type Password\" type=\"password\" id=\"repassword\"\r\n            onChange={e => setRepassword(e.target.value)} />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Link to=\"/signin\" variant=\"body2\">\r\n                Have account already? Signin\r\n              </Link>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Dashboard.js",["160","161","162","163","164"],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\TopBar.js",["165","166","167","168","169"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport {Card, AppBar, Button, Toolbar, Typography, IconButton, MenuItem, Menu, Link } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport io from 'socket.io-client'\r\nimport userApi from '../api/userApi';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  bottom_space: {\r\n      marginBottom: 12, \r\n  },\r\n  title: {\r\n      flexGrow: 1,\r\n  },\r\n  logoutButton: {\r\n      marginLeft: 10,\r\n  },\r\n  link: {\r\n      textDecoration: 'none',\r\n      flexGrow: 1,\r\n  },\r\n  linkProfile: {\r\n      textDecoration: 'none',\r\n  },\r\n  large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n  },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const classes = useStyle();\r\n  const isLoggedIn = props.isLogin;\r\n\r\n  let name = null;\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n      }\r\n\r\n      setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n    event.preventDefault();\r\n    setOpen(false);\r\n    }\r\n  }\r\n  \r\n  const getUserName = () =>\r\n  {\r\n    if( localStorage.getItem('curUser')){\r\n      name = JSON.parse(localStorage.getItem('curUser')).name;\r\n    }\r\n  }\r\n  \r\n  getUserName();\r\n  \r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className=\"title\">\r\n            Hello {!isLoggedIn ? <Button href=\"/signin\" color=\"inherit\">Login</Button>: name}\r\n          </Typography>\r\n          \r\n          {isLoggedIn && (\r\n            <div>\r\n              <Button\r\n              ref={anchorRef}\r\n              aria-controls={open ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              >\r\n                  <AccountCircleIcon fontSize=\"large\"/>\r\n              </Button>\r\n              <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n              {({ TransitionProps, placement }) => (\r\n                  <Grow\r\n                  {...TransitionProps}\r\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                  >\r\n                  <Paper>\r\n                      <ClickAwayListener onClickAway={handleClose}>\r\n                      <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                          <Link href='/profile' className={classes.linkProfile}>\r\n                              <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                          </Link>\r\n                          <Link href='/signout' className={classes.linkProfile}>\r\n                              <MenuItem onClick={handleClose}>Sign out</MenuItem>\r\n                          </Link>\r\n                      </MenuList>\r\n                      </ClickAwayListener>\r\n                  </Paper>\r\n                  </Grow>\r\n              )}\r\n              </Popper>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Signin.js",["170","171"],"import React, { useState    } from 'react';\r\nimport { Avatar, LinearProgress, Button, Typography, Grid, Checkbox, FormControlLabel, TextField, CssBaseline, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Facebook from './Facebook'\r\nimport Google from './Google'\r\nimport userApi from '../api/userApi';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const [user, setUser] = useState({email: \"\", password: \"\"});\r\n  const [isRedirect, setIsRedirect] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const setRedirectTrue = ()=>{\r\n    setIsRedirect(true);\r\n  }\r\n  const setIsLoadingTrue = ()=> {\r\n    setIsLoading(true);\r\n  }\r\n  const setIsLoadingFalse = ()=> {\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmit = async (e)=>{\r\n    try{\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      const response = await userApi.signin(user);\r\n      if(response.token) {\r\n          localStorage.setItem('login', JSON.stringify({\r\n            login:true,\r\n            token:response.token,\r\n          }));\r\n          const curUser = await userApi.getCurUser();   \r\n          localStorage.setItem('curUser', JSON.stringify(curUser));\r\n        setIsLoading(false);\r\n        setIsRedirect(true);\r\n      } else {\r\n          alert(response.message);\r\n      }\r\n    } catch(err) {\r\n      setIsLoading(false);\r\n      if(err.response.status === 401) alert(err.response.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n    { (isRedirect === true) ? (<Redirect to='/' />) :\r\n    (<Container component=\"main\" maxWidth=\"xs\">\r\n      {isLoading ? <LinearProgress></LinearProgress> : <></>}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form method=\"form\" id=\"form-data\" className=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" autoFocus \r\n            onChange={e => setUser({ ...user, email: e.target.value})}  />\r\n          <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\"\r\n            onChange={e => setUser({ ...user, password: e.target.value})} autoComplete=\"current-password\" />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container mb={2} className={classes.submit}>\r\n            <Grid item xs >\r\n              <Facebook setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Google setIsRedirect={setRedirectTrue} setIsLoadingTrue={setIsLoadingTrue} setIsLoadingFalse={setIsLoadingFalse}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/forget-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>)\r\n  }\r\n  </div>\r\n  );\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\api\\userApi.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Profile.js",["172","173","174","175","176"],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroGame.js",["177","178","179","180","181","182","183"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport CaroBoard from './CaroBoard';\r\nimport { io } from 'socket.io-client';\r\nimport { SportsHockeyRounded } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnBold: {\r\n        fontWeight: 'bold',\r\n    },\r\n    game: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    gameInfo: {\r\n        marginLeft: '20px'\r\n    }\r\n}));\r\n\r\nconst size = 20;\r\nconst winCondition = 5;\r\n\r\nconst CaroGame = ({ socket, isStart, room }) => {\r\n    let tmpArr = Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      tmpArr[i] = Array(size).fill(null);\r\n    }\r\n\r\n    const [gameConfig, setGameConfig] = useState({\r\n        width: size,\r\n        height: size,\r\n        history: [{\r\n            squares: tmpArr,\r\n            location: null\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        isDescending: true\r\n    });\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        socket.on('updateGameConfig', response => setGameConfig(response));\r\n        socket.on('opponentMove',  response => handleClick(response.i, response.j));\r\n    }, [socket]);\r\n\r\n    const history = gameConfig.history;\r\n    const current = history[gameConfig.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    let moves = history.map((step, move) => {\r\n        const desc = move ?\r\n        'Go to move #' + move + ' (' + step.location.x + ',' + step.location.y + ')' :\r\n        'Go to game start';\r\n        return (gameConfig.stepNumber === move) ? (\r\n            <li key={move}>\r\n                <Button className={classes.btnBold} onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        ) : (\r\n            <li key={move}>\r\n                <Button onClick={() => jumpTo(move)}>{desc}</Button>\r\n            </li>\r\n        );\r\n    })\r\n    if(gameConfig.isDescending) {\r\n        moves = moves.reverse();\r\n    }\r\n\r\n    let arrow = gameConfig.isDescending ? '↓' : '↑';\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner.val;\r\n    } else {\r\n        status = 'Next player: ' + (gameConfig.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    const handleClick = (i, j) => {\r\n        if(!isStart) return;\r\n        const newHistory = gameConfig.history.slice(0, gameConfig.stepNumber + 1);\r\n        const current = history[gameConfig.stepNumber];\r\n        const squares = current.squares.slice();\r\n\r\n        current.squares.map((row, index) => {\r\n            squares[index] = current.squares[index].slice();\r\n            return true;\r\n        });\r\n\r\n        if(squares[i][j] || calculateWinner(squares)) return;\r\n       \r\n        squares[i][j] = gameConfig.xIsNext ? 'X' : 'O';\r\n        \r\n        socket.emit('nextMove', {\r\n            i: i,\r\n            j: j,\r\n            room: room,\r\n            gameConfig: {\r\n                ...gameConfig,\r\n                history: newHistory.concat([{\r\n                    squares: squares,\r\n                    location: {x: i, y: j}\r\n                }]),\r\n                stepNumber: newHistory.length,\r\n                xIsNext: !gameConfig.xIsNext\r\n            }\r\n        });\r\n        \r\n        if(calculateWinner(squares)) \r\n        {\r\n            console.log(\"send request\");\r\n            socket.emit(\"gameResult\", {\r\n                room: {\r\n                    ...room,\r\n                    status: 0\r\n                },\r\n                winner: gameConfig.xIsNext ? 1 : 2,\r\n                resultType: \"winLose\" // Còn 1 type nữa là \"draw\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const sort = () => {\r\n        setGameConfig({\r\n            ...gameConfig,\r\n            isDescending: !gameConfig.isDescending\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.game}>\r\n                <div>\r\n                    <CaroBoard\r\n                        squares={current.squares}\r\n                        onClick={(i, j) => handleClick(i, j)}\r\n                        winner={winner}\r\n                        isStart={isStart}\r\n                    />\r\n                </div>\r\n                {/* <div className={classes.gameInfo}>\r\n                    <div>\r\n                        <Button onClick={sort}>Thứ tự bước {arrow}</Button>\r\n                    </div>\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    let win;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      for (let j = 0; j < squares[i].length; j++) {\r\n        if (!squares[i][j]) continue;\r\n        if (j <= squares[i].length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i][j + k] !== squares[i][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRight'};\r\n        }\r\n        if (i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j] !== squares[i + k + 1][j]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToDown'};\r\n        }\r\n        if (j <= squares[i].length - winCondition && i <= squares.length - winCondition) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToRightDown'};\r\n        }\r\n        if (i <= squares.length - winCondition && j >= winCondition - 1) {\r\n          win = true;\r\n          for (let k = 0; k < winCondition - 1; k++) {\r\n            if (squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]) {\r\n              win = false\r\n            }\r\n          }\r\n          if (win) return {val: squares[i][j], x: j, y: i, direction: 'ToLeftDown'};\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default CaroGame;\r\n","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageItem.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\api\\axiosClient.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Facebook.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageRoom.js",["184"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport MessageBox from './MessageBox';\r\nexport default function MessageRoom(props) {\r\n    const {socket, room} = props;\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n    const getUser = () =>\r\n    {\r\n        if( localStorage.getItem('curUser')){\r\n            return JSON.parse(localStorage.getItem('curUser'));\r\n        }\r\n        else return 0;\r\n    }\r\n\r\n    const sendNewMessage = (e)=> {\r\n        e.preventDefault()\r\n        if(message!==\"\"){\r\n            const user= getUser();\r\n            socket.emit(\"chat-room\", {message: message, user: user, room: room}); //gửi event về server\r\n            setMessage(\"\");\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        socket.on('server-chat-room',response => {\r\n            setMessages(draft => [ ...draft, {name: response.name, message:response.message}])\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        });\r\n        }, []);\r\n    return (\r\n        <MessageBox messagesEndRef={messagesEndRef} messages={messages} addMessages={sendNewMessage} message={message} setMessage={setMessage}/>\r\n    )\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\Google.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\InfomationBox.js",["185"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Avatar, Box, Grid} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(1),\r\n\t},\r\n\tinfomation: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: theme.spacing(2),\r\n\t}\r\n}));\r\nexport default function Profile(props) {\r\n    const { user } = props;\r\n    const classes = useStyles();\r\n    \r\n    return(<Box bgcolor=\"info.main\" height={750}>\r\n        <Paper class={classes.paper}>\r\n            <Box display=\"flex\" justifyContent=\"center\" p={3} >\r\n                <Avatar alt=\"avatar\" src={user.avatar} />\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"left\" m={1} p={1} >\r\n                <h2>{user.name}</h2>\r\n            </Box>\r\n        </Paper>\r\n        <Paper class={classes.infomation}>\r\n            <Grid  container spacing={1} >\r\n                <Grid item xs={12}>\r\n                    <h4>Email: {user.email}</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h4>Created on: {user.date}</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h4>Rank: {user.rank}</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h4>Elo: {user.elo}</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h4>Win rate: {(user.game.total==0 ? \"0%\" : user.game.win*100/user.game.total+\"%\")}</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h4>Total games: {user.game.total}</h4>\t\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    </Box>)\r\n}\r\n","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\api\\oauthApi.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\MessageBox.js",["186","187","188","189"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Message from './MessageItem';\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n//    overflow: 'hidden',\r\n    width: '100%',\r\n    height: 380,\r\n    backgroundColor:'#cfe8fc',\r\n//    position: 'fixed',\r\n  },\r\n  messlist: {\r\n    flexGrow: 1,\r\n    width: '93.5%',\r\n    height: '75%',\r\n    overflow: 'scroll',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  searchIcon: {\r\n      margin: theme.spacing(2, 2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n//    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function MessageList(props) {\r\n  const classes = useStyles();\r\n  const { messagesEndRef, addMessages, messages, message, setMessage } = props;\r\n  return (\r\n      <div className={classes.root} id=\"messages\"  >\r\n        <div className={classes.messlist}>\r\n            {messages.map((item, index) =>\r\n                <Message key={index} message={item}/>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n        <form action=\"#\" onSubmit={addMessages} className={classes.searchIcon}>\r\n          <TextField fullWidth id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" onChange={e => setMessage(e.target.value)} value={message} autoComplete=\"off\" />\r\n          <button type=\"submit\" style={{marginLeft: \"10px\", height: \"100%\"}}>\r\n            <SendIcon color=\"primary\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n}","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroBoard.js",["190"],"import React from 'react';\r\nimport CaroSquare from './CaroSquare';\r\nimport CaroRow from './CaroRow';\r\n\r\nconst CaroBoard = ({ squares, onClick, winner, isStart }) => {\r\n    const board = squares.map((row, index) => <CaroRow winner={winner} rowIdx={index} row={row} onClick={onClick} isStart={isStart} key={\"r\" + index}/>);\r\n    const renderSquare = (i) => <CaroSquare value={squares[i]} onClick={() => onClick(i)}/>;\r\n\r\n    return (\r\n        <div>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CaroBoard;\r\n","F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroRow.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\CaroSquare.js",[],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\AnotherProfile.js",["191","192","193","194","195","196"],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\HistoryBox.js",["197","198","199","200","201","202","203","204","205","206"],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\components\\HistoryItem.js",["207","208","209","210","211","212","213","214","215","216","217","218"],"F:\\Study\\web\\nam 4\\game-caro-client1\\src\\pages\\TopPlayer.js",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"227","line":46,"column":8,"nodeType":"225","messageId":"226","endLine":46,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":71,"column":8,"nodeType":"230","endLine":71,"endColumn":18,"suggestions":"231"},{"ruleId":"223","severity":1,"message":"232","line":3,"column":34,"nodeType":"225","messageId":"226","endLine":3,"endColumn":38},{"ruleId":"223","severity":1,"message":"233","line":3,"column":47,"nodeType":"225","messageId":"226","endLine":3,"endColumn":52},{"ruleId":"223","severity":1,"message":"234","line":3,"column":54,"nodeType":"225","messageId":"226","endLine":3,"endColumn":57},{"ruleId":"223","severity":1,"message":"235","line":7,"column":10,"nodeType":"225","messageId":"226","endLine":7,"endColumn":22},{"ruleId":"223","severity":1,"message":"236","line":29,"column":12,"nodeType":"225","messageId":"226","endLine":29,"endColumn":21},{"ruleId":"223","severity":1,"message":"237","line":29,"column":23,"nodeType":"225","messageId":"226","endLine":29,"endColumn":35},{"ruleId":"228","severity":1,"message":"238","line":35,"column":8,"nodeType":"230","endLine":35,"endColumn":10,"suggestions":"239"},{"ruleId":"223","severity":1,"message":"240","line":2,"column":44,"nodeType":"225","messageId":"226","endLine":2,"endColumn":52},{"ruleId":"223","severity":1,"message":"241","line":2,"column":54,"nodeType":"225","messageId":"226","endLine":2,"endColumn":70},{"ruleId":"223","severity":1,"message":"242","line":4,"column":1,"nodeType":"225","messageId":"226","endLine":4,"endColumn":16},{"ruleId":"223","severity":1,"message":"232","line":4,"column":24,"nodeType":"225","messageId":"226","endLine":4,"endColumn":28},{"ruleId":"223","severity":1,"message":"243","line":12,"column":8,"nodeType":"225","messageId":"226","endLine":12,"endColumn":10},{"ruleId":"228","severity":1,"message":"229","line":153,"column":6,"nodeType":"230","endLine":153,"endColumn":8,"suggestions":"244"},{"ruleId":"223","severity":1,"message":"245","line":189,"column":9,"nodeType":"225","messageId":"226","endLine":189,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"246","line":2,"column":9,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"247","line":2,"column":74,"nodeType":"225","messageId":"226","endLine":2,"endColumn":78},{"ruleId":"223","severity":1,"message":"243","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":10},{"ruleId":"223","severity":1,"message":"248","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":15},{"ruleId":"223","severity":1,"message":"240","line":2,"column":60,"nodeType":"225","messageId":"226","endLine":2,"endColumn":68},{"ruleId":"223","severity":1,"message":"241","line":2,"column":70,"nodeType":"225","messageId":"226","endLine":2,"endColumn":86},{"ruleId":"223","severity":1,"message":"233","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":15},{"ruleId":"223","severity":1,"message":"249","line":4,"column":25,"nodeType":"225","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"223","severity":1,"message":"250","line":31,"column":13,"nodeType":"225","messageId":"226","endLine":31,"endColumn":21},{"ruleId":"223","severity":1,"message":"250","line":38,"column":13,"nodeType":"225","messageId":"226","endLine":38,"endColumn":21},{"ruleId":"223","severity":1,"message":"250","line":44,"column":9,"nodeType":"225","messageId":"226","endLine":44,"endColumn":17},{"ruleId":"223","severity":1,"message":"243","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":12},{"ruleId":"223","severity":1,"message":"251","line":6,"column":10,"nodeType":"225","messageId":"226","endLine":6,"endColumn":29},{"ruleId":"228","severity":1,"message":"252","line":46,"column":8,"nodeType":"230","endLine":46,"endColumn":16,"suggestions":"253"},{"ruleId":"223","severity":1,"message":"254","line":66,"column":17,"nodeType":"225","messageId":"226","endLine":66,"endColumn":22},{"ruleId":"223","severity":1,"message":"255","line":69,"column":9,"nodeType":"225","messageId":"226","endLine":69,"endColumn":14},{"ruleId":"223","severity":1,"message":"256","line":74,"column":9,"nodeType":"225","messageId":"226","endLine":74,"endColumn":15},{"ruleId":"223","severity":1,"message":"257","line":129,"column":11,"nodeType":"225","messageId":"226","endLine":129,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":29,"column":12,"nodeType":"230","endLine":29,"endColumn":14,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":43,"column":52,"nodeType":"261","messageId":"262","endLine":43,"endColumn":54},{"ruleId":"223","severity":1,"message":"263","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"264","line":1,"column":38,"nodeType":"225","messageId":"226","endLine":1,"endColumn":44},{"ruleId":"223","severity":1,"message":"265","line":6,"column":10,"nodeType":"225","messageId":"226","endLine":6,"endColumn":18},{"ruleId":"223","severity":1,"message":"266","line":7,"column":11,"nodeType":"225","messageId":"226","endLine":7,"endColumn":23},{"ruleId":"223","severity":1,"message":"233","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":15},{"ruleId":"223","severity":1,"message":"267","line":4,"column":17,"nodeType":"225","messageId":"226","endLine":4,"endColumn":23},{"ruleId":"223","severity":1,"message":"249","line":4,"column":25,"nodeType":"225","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"223","severity":1,"message":"268","line":4,"column":80,"nodeType":"225","messageId":"226","endLine":4,"endColumn":89},{"ruleId":"223","severity":1,"message":"269","line":15,"column":8,"nodeType":"225","messageId":"226","endLine":15,"endColumn":15},{"ruleId":"228","severity":1,"message":"270","line":28,"column":5,"nodeType":"230","endLine":28,"endColumn":7,"suggestions":"271"},{"ruleId":"223","severity":1,"message":"263","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":24},{"ruleId":"223","severity":1,"message":"265","line":3,"column":10,"nodeType":"225","messageId":"226","endLine":3,"endColumn":18},{"ruleId":"223","severity":1,"message":"267","line":4,"column":17,"nodeType":"225","messageId":"226","endLine":4,"endColumn":23},{"ruleId":"223","severity":1,"message":"249","line":4,"column":25,"nodeType":"225","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"223","severity":1,"message":"234","line":4,"column":33,"nodeType":"225","messageId":"226","endLine":4,"endColumn":36},{"ruleId":"223","severity":1,"message":"272","line":4,"column":38,"nodeType":"225","messageId":"226","endLine":4,"endColumn":49},{"ruleId":"223","severity":1,"message":"273","line":4,"column":57,"nodeType":"225","messageId":"226","endLine":4,"endColumn":67},{"ruleId":"223","severity":1,"message":"274","line":4,"column":69,"nodeType":"225","messageId":"226","endLine":4,"endColumn":78},{"ruleId":"223","severity":1,"message":"268","line":4,"column":80,"nodeType":"225","messageId":"226","endLine":4,"endColumn":89},{"ruleId":"223","severity":1,"message":"269","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":15},{"ruleId":"223","severity":1,"message":"263","line":1,"column":16,"nodeType":"225","messageId":"226","endLine":1,"endColumn":24},{"ruleId":"223","severity":1,"message":"265","line":3,"column":10,"nodeType":"225","messageId":"226","endLine":3,"endColumn":18},{"ruleId":"223","severity":1,"message":"267","line":4,"column":17,"nodeType":"225","messageId":"226","endLine":4,"endColumn":23},{"ruleId":"223","severity":1,"message":"249","line":4,"column":25,"nodeType":"225","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"223","severity":1,"message":"234","line":4,"column":33,"nodeType":"225","messageId":"226","endLine":4,"endColumn":36},{"ruleId":"223","severity":1,"message":"272","line":4,"column":38,"nodeType":"225","messageId":"226","endLine":4,"endColumn":49},{"ruleId":"223","severity":1,"message":"274","line":4,"column":69,"nodeType":"225","messageId":"226","endLine":4,"endColumn":78},{"ruleId":"223","severity":1,"message":"268","line":4,"column":80,"nodeType":"225","messageId":"226","endLine":4,"endColumn":89},{"ruleId":"259","severity":1,"message":"260","line":18,"column":32,"nodeType":"261","messageId":"262","endLine":18,"endColumn":34},{"ruleId":"259","severity":1,"message":"260","line":18,"column":55,"nodeType":"261","messageId":"262","endLine":18,"endColumn":57},{"ruleId":"259","severity":1,"message":"260","line":18,"column":78,"nodeType":"261","messageId":"262","endLine":18,"endColumn":80},{"ruleId":"259","severity":1,"message":"260","line":18,"column":101,"nodeType":"261","messageId":"262","endLine":18,"endColumn":103},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'addMessages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["277"],"'Link' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'RoomOutlined' is defined but never used.","'isEndGame' is assigned a value but never used.","'setIsEndGame' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'showGameResult' and 'socket'. Either include them or remove the dependency array.",["278"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'TablePagination' is defined but never used.","'io' is defined but never used.",["279"],"'leaveRoom' is assigned a value but never used.","'Card' is defined but never used.","'Menu' is defined but never used.","'userApi' is defined but never used.","'Avatar' is defined but never used.","'response' is assigned a value but never used.","'SportsHockeyRounded' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["280"],"'moves' is assigned a value but never used.","'arrow' is assigned a value but never used.","'status' is assigned a value but never used.","'sort' is assigned a value but never used.",["281"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'renderSquare' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["282"],"'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"287","fix":"291"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [messages, socket]",{"range":"294","text":"295"},"Update the dependencies array to be: [showGameResult, socket]",{"range":"296","text":"297"},"Update the dependencies array to be: [socket]",{"range":"298","text":"299"},"Update the dependencies array to be: [handleClick, socket]",{"range":"300","text":"301"},{"range":"302","text":"299"},"Update the dependencies array to be: [id]",{"range":"303","text":"304"},[2091,2101],"[messages, socket]",[1174,1176],"[showGameResult, socket]",[4668,4670],"[socket]",[1245,1253],"[handleClick, socket]",[1062,1064],[990,992],"[id]"]